{
    "event_id": "028",
    "claim": "During September 2020 we identified a new campaign targeting many prominent Israeli organizations, attributed to the Iranian threat actor ‘MuddyWater.",
    "original_label": "true",
    "label": "true",
    "explain": "During September 2020, we identified a new campaign targeting many prominent Israeli organizations. The campaign was attributed to the Iranian threat actor ‘MuddyWater’ (also known as TEMP.Zagros, Static Kitten and Seedworm). MuddyWater was previously exposed as a contractor for the IRGC (Islamic Republic Guard Corps)1 . ClearSky and Profero comprehensively researched this campaign. During the campaign, the group attempted to install a variant of the “PowGoop”, a malicious replacement to Google update dll. Based on PaloAlto report2 , “PowGoop” is a loader for a variant of Thanos ransomware with destructive capabilities. We assess that the group is attempting to employ destructive attacks (the likes of the NotPetya attack from 2017), via a disguised as ransomware attacks. Although we didn’t see execution of the destruction in the wild, due to the presence of the destructive capabilities, the attribution to nation-state sponsored threat actor, and the realization of this vector in the past, a destructive purpose is more likely than a ransomware that is being deployed for financial goals. On September 4th, PaloAlto published a report about this destructive variant of Thanos ransomware without attributing it to any known threat actor. However, the organizations that were targeted in the campaign were state-run organizations in the Middle East and North Africa. The loader of this variant dubbed ‘PowGoop’, is a fake Google Update mechanism and was attributed to MuddyWater based on code similarities with the MoriAgent / PudPoul dll loader. In our analysis, we identified two primary attack vectors: This is not the first time that Iranian threat actors use wipers as part of their TTPs. The threat actor APT33 used wipers in at least three different attacks, the most notorious of them being the Shamoon attack. In contrast to APT33, MuddyWater is known for their social engineering campaigns. The primary objectives of previous MuddyWater campaigns were espionage and information theft. In ‘Operation Quicksand’ we uncovered the first known instance of a potentially destructive attack executed by MuddyWater, focusing on prominent organizations in Israel and in other countries around the world. We identified a repetitive PDB path in the networks that were researched containing the word ‘Covic’. This may indicate a covid-19 inspiration and suggests the possible dates in which MuddyWater might have developed the malware. Destructive campaigns were engaged by Iranian threat actors in the past, particularly targeting the Arabian Peninsula. However, destructive attacks of this scale have only been observed once prior to the current event, and the perpetrator was not MuddyWater. In 2012, a threat actor based in Iran used Shamoon wiper in their attacks against Aramco, the oil and gas company from Saudi Arabia4 . In 2016-2018, two more variants of Shamoon were exposed5 . These attacks were previously attributed to APT33 (Elfin) by FireEye6 and McAfee7 . In 2019-2020, a couple new wipers – ZeroCleare8 and Dustman9 , were exposed in 2 operations against entities in the Arabian Peninsula. Dustman and ZeroCleare were both attributed to APT33 and APT34. In May 2020, Fox News reported on an offensive CNA (Cyber Network Attack) executed by Iran which targeted Israel's Water and Sewage Systems10. The Israeli national cyber authority did not confirm that Iran was behind this attack. Despite previous instances of Iranian threat actors using wipers, an attempt to camouflage the wiper as a ransomware was not yet reported.The ransomware Petya surfaced in 201611, targeting Microsoft Windows-based systems. It was one of the largest documented ransomware attacks. Not long after, a similar ransomware was observed attacking primarily Ukrainian entities, amongst other targets. This malware was designed to resemble a ransomware, while its real purpose is to damage the network. Files were encrypted, but the malware was modified so that it could not revert and decrypt the files. The NotPetya attack was attributed to the Sandworm group (also known as Voodoo Bear and Iron Viking) – a threat actor based in Russia. The attack vector in Operation Quicksand is almost identical. According to PaloAlto, the attacker can install ‘Thanos Ransomware’ variant using the PowGoop loader in the compromised asset. Once the (allegedly) ‘Thanos Ransomware’ is installed on the victim’s system, the victim will be presented with a ‘How to decrypt’ message. However, the file will overwrite the MBR.In ‘Operation Quicksand’, the MuddyWater group used a few malicious files, as well as legitimate files that were used to achieve the group’s goals. The tools and techniques used by the group may be divided into several groups:The different tools and techniques used by the group are divided in the following table according to their Kill Chain Method. In this comprehensive research, we identified 2 attack vector types – exploit-based (which will be mentioned as type A) and social engineering-based (which will be mentioned as type B). Following is the mentioned division by type:As observable, the chains are almost identical. However, the major difference between the attack vectors is the injection method. The following table shows the overlaps between the tools and techniques that we have found in the operation, dividing them according to attack vector – social engineering (type a) and vulnerability exploitation (type b).An attack campaign waged against prominent Israeli organizations was revealed during the first week of September through our monitoring system. We identified many resemblances in TTPs with previous attacks, attributing the current campaign to MuddyWater accordingly. During our analysis, we were able to identify PowGoop’s payload in several organizations, with similarities to TTPs reported in PaloAlto report. The first attack vector included exploiting vulnerabilities in the victim’s network, installing relevant tools that enable the attacker to gain persistency, and downloading the PowGoop payload. The second attack vector is more “common” and includes social engineering methods and a malicious Macro in its infection phase. In this chapter, we will present a summary of the two attack vectors used by the group. Both infection vectors will be covered (and will be divided based on the tools, techniques, or procedures the attacker use), followed by the installation of PowGoop , which was exposed as the loader of Thanos.The first attack vector entails exploiting known vulnerabilities in OWA, Microsoft Exchange servers or using ZeroLogon Windows vulnerabilities. These are followed by vulnerabilities with different access systems that were used by the attackers:A remote code execution vulnerability exists in Microsoft Exchange software when the software fails to properly handle objects in memory, aka the 'Microsoft Exchange Memory Corruption Vulnerability'17 . The exploitation provides the attacker SYSTEM level code execution privileges.An elevation of privilege vulnerability exists when an attacker establishes a vulnerable Netlogon secure channel connection to a domain controller, using the Netlogon Remote Protocol (MS-NRPC), aka 'Netlogon Elevation of Privilege Vulnerability'.After exploiting the vulnerability in the exchange server, a WebShell will be uploaded to the compromised server. During our IR investigation, we identified a WebShell named ‘LiveIdError.aspx’which indicates this specific vulnerability. Note that this is the only known vulnerability through which this WebShell is dropped. This WebShell was used to download another ASP.NET WebShell as a payload. The second WebShell is named ‘IndexExchangeManagment.aspx’ (Note the misspelled ‘management’ word):The attacker required privileged credentials to successfully execute the exploitation. We assess that the attacker stole these credentials by deploying Mimikatz. Moreover, we identified a GitHub profile with the explanation of the execution of the vulnerability. This profile is also based in Iran. Using this WebShell, a zip file is dropped to the victim’s network. The file archived in the zip is a portable executable file named SSF.exe. This file was also reported in SecureWorks’ report as one of the payloads MuddyWater installs in compromised servers19. This tool is based on a publicly available open-source toolkit20 that enables Secure Socket Funneling (SSF) between the C2 and the remote compromised server or between two machines that were compromised in the victim’s network. The tool allows the attacker to send data from multiple sockets over TCP or UDP ports through a single secure TLS tunnel. In our analysis, we found out that SSF.mx is a variant of the SSF tool from GitHub. This variant also allows the attacker to execute shell commands across the network (for lateral movement or between internal machines that were encrypted). Note that after the installation of PowGoop loader, we identified attempts to delete SSF.mx files from the network. After gaining access to the victim’s network, the attacker started conducting reconnaissance. We identified queries for Domain Administrator accounts and enumeration attempts for specific domains in the network. Using the SSF.mx secure tunnel, the attacker spread the PowerShell scripts and executes them. We identified the distribution of the PowGoop loader to the system. A scheduled task is also generated by the attacker. This task would take part in running GoopDate.dll (PowGoop).The second vector is more in line with common MuddyWater vectors. As mentioned, there is a possibility that Vector A was utilized only after initial access was obtained using Vector B. In the beginning of the delivery stage, the target receives a link to their corporate email, joined by a link to a file storing service. Through this service the victim encounters a ZIP containing the infected file：From the malicious macro embedded in the excel file we can derive that the file used in the attack was previously a test file. The macro is divided into different parts:Each part of code is encoded in different ways, including ASCII, XOR, and base64. Following is the code before decoding and decrypting:With this component, 2 pieces of PowerShell code are downloaded to the computer. After that, a Scheduled Task is automatically run, to activate WScript:This PowerShell code communicates with a breached server from which the group downloads malicious files used as the malware’s “Stage 2”. The second server is a C2 server used as storage for additional files, not necessarily breached. The communication in this instance is carried out through a file named dl which contains PowerShell commands. Following is the command that allows running this file (can also be seen in the code): Communications to the server are carried out with GET commands in TCP format (under port 443). Following is the specific command to download the file:A VBS file called db.vbs is downloaded from the server and stored in the Public folder. The aforementioned file is an additional PowerShell command, which extracts a third ps1 file. This file, called putty.ps1, allows for communication between the second C2 server in this infrastructure and the infected machine, as preparation for the downloading of the malware to the machine. The aforementioned C2 server is a webhook (Reverse API), from which the attackers download a specific file stored at the site. Following are three additional webhooks (aside from the webhook in the screenshot), which we have identified throughout the investigation:The Covicli backdoor will be downloaded from this webhook to the victim’s compromised server. Similar to the Excel vector, an archive file (mainly ZIP) was sent to an employ of the organization we investigated. The file accordingly is in Hebrew, and is about a loan. Here is a screenshot of the PDF file: Similarly, to files used in previous campaigns, once the malicious executable is running, two files are unloaded to the machine: a legitimate PDF and a malicious DLL. It appears that the attackers have advanced their security system avoidance techniques, implementing several camouflaging components such as ones designed to refrain from triggering Windows Defender. The attackers manage to bypass many identification systems, making technical investigations much more difficult. Additionally, the use of Hewlett-Packard MFP was identified, in place of the NSIS executable. In the meantime, another folder will be created in the path:To gain persistency, the malicious file will be copied to the %temp% folder followed by its deletion from the original folder. Another file will be copied to the Startup folder with a PDF’s icon. The attacker will also create a scheduled task for a PowerShell that runs a file named xca_db_stat.exe. Then, the attacker will create 2 registry keys on the following path: From the C2, a dll file named SSLeay32.dll will be downloaded. This file is a modifiedOpenSSL dynamic library, which was modified for the hacker’s purposes. We identified the following PDB path:Due to the appearance of the word Covic, and the original name given to the file (CLI.dll) by the threat actor, we named this backdoor Covicli. This file also contains a module version ID of .net4: The attacker uses the following command line in order to communicate with the C2 over OpenSSL:This server’s Header displays the server’s location as if it is associated with the Azerbaijani government. The result of this is diverging access to the server through port 80 but without the path to the following site：The malware itself generates a scheduled task named Updater (expanded further on) that communicates with the server using PowerShell (on port 80), much like MoriAgent. The PowerShell will run the following commands: ipconfic, arp, net. If the connection to the C2 was successful, the PowGoop loader will be installed in the system. After the installation, the attacker tried to delete SSF.mx task from the network by using the following command:This is a slightly different variant originally found in the report by Palo Alto (which reported about 4 components). The loader from PaloAlto report was split into two components. The second loader found in this attack matches the functionality of the only loader described in Palo Alto’s report. This suggests it was used as a technique by the attacker to obfuscate part of the loader that was detected by antivirus scanners. The GoogleUpdate.exe used with the malware is a legitimate binary, but it is vulnerable to a DLL-sideloading attack. One of Google Update’s dependencies is a DLL named goopdate86.dll which then has a dependency of goopdate.dll. The malware works by replacing the original goopdate.dll by a malicious DLL containing the same filename. By replacing the legitimate goopdate.dll with a malicious one, GoogleUpdater.exe ends up loading the malicious payload into memory. The PowGoop malware works as follows:In both cases, the PowGoop loader payload was downloaded from the C2 (which we attributed to MuddyWater based on unique server signature). Once this payload is run successfully, a Thanos Ransomware payload can be downloaded to the server, which is compatible with the scenario PaloAlto described in their report.“MuddyWater” group is one of the most active Iranian APTs, targeting Israeli organizations since at least 2018. Over the past few years, we have uncovered a number of “social engineering” attack scenarios conducted by the group. campaigns by the group have targeted individuals, companies, organizations, and governments. We also identified attacks by the group targeting internal Iranian actors. The group’s campaigns may be categorized to three distinct periods and attack scenarios (ordered chronologically): It is possible that due to the advancing confrontation with Israel, and simply developments of attack methods over time, that the group had undergone an organizational\\strategic evolution (or simply received new instructions) into destructive attacks. During ClearSky’s investigation we have located several additional files and C2s that operate as part of the attack infrastructure. Once the tool is deployed, keys are exchanged, and persistence on the network is established, the group generates communications with its C2, this apparently to install a malware that appears to be ransomware. In light of the exposure of Thanos, ClearSky assesses that the group is attempting to employ destructive attacks (the likes of the NotPetya attack from 2017). MuddyWater updated their TTPs, as well as their level of sophistication, mainly during 2020. We assess that during this year MuddyWater began to work for the IRGC , acting as a contractor for additional cyber security operations. Since the group was discovered a few years ago, their priority was only CNE (espionage), against private organizations, government organizations, ministries, and agencies. The group relied mostly on social engineering methods. For example, in late 2019 we discovered an attempt to attack a journalist that worked for a prominent US media outlet. In the first stage of the attack, MuddyWater emailed the victim without sending any file or link. The group tried to schedule a physical meeting with the victim, and only after he made it clear that he cannot have the meeting, the group sent him a malicious file. Unlike this past TTP, we identified exploitation of vulnerabilities as the major injection vector in the current campaign. We assess that the level of sophistication inherent to the group is high. Israel and other countries that are under the threat of this group have to harden their network and be prepared for more camouflaged destructive campaigns. This time, the attack was prevented, and therefore we cannot prove that MuddyWater installed PowGoop in the victim’s network for a destructive attack. However, we adopted the assessment by PaloAlto regarding the purpose of this loader. MuddyWater’s capabilities are not extremely unique, and this attack seems like an escalation of their aggression level, rather than a completely new form of attack (as was the case in the reported Fox Kitten attack). However, it is noteworthy that in this attack the previous infiltration into the systems of the Israeli organizations was used as to gain trust and thus provide a basis for further attacks. The tension between Israel and Iran in the cyber domain might be an explanation for this evolution. This tension began a decade ago, with the Stuxnet malware that was attributed to Israel and the US, and the Iranian response. One of the retaliations of this attack was the mentioned destructive Shamoon attack which was attributed to another Iranian threat actor – APT33. This year displayed a new phase of this tension, beginning with the uncovering of the Fox Kitten operation23 and the alleged attack by Iran against the water authority of Israel. The retaliation for Ghasem Soleimani’s death is another possible explanation for the attack. The assassination caught Iran off-guard. On the same day, the wiper ‘Dustman’ was exposed. We assess that another potential explanation for Operation Quicksand is retaliation for the assassination, and the timing was dependent on the toolset the Iranian threat actor possessed at the time.\n\n\n",
    "reports": [
        {
            "link": "https://www.trendmicro.com/en_us/research.html?category=trend-micro-research:threats/malware/",
            "content": "Analysis of these campaigns revealed the use of new tools and payloads, which indicates that the well-known threat actor group is continuously developing their schemes. Instead, the campaign used compromised legitimate accounts to trick victims into installing malware. Organizations can also take advantage of Trend Micro™ Deep Discovery™, a solution that provides detection, in-depth analysis, and proactive response to today’s stealthy malware and targeted attacks in real time. We also observed MuddyWater’s use of multiple open source post-exploitation tools, which they deployed after successfully compromising a target. We also unearthed and detailed our other findings on MuddyWater, such as its connection to four Android malware families and its use of false flag techniques, among others, in our report “New MuddyWater Activities Uncovered: Threat Actors Used Multi-Stage Backdoors, False Flags, Android Malware, and More.” While MuddyWater appears to have no access to zero-days and advanced malware variants, it still managed to compromise its targets.",
            "domain": "www.trendmicro.com",
            "tokenized": [
                {
                    "sent": "Analysis of these campaigns revealed the use of new tools and payloads, which indicates that the well-known threat actor group is continuously developing their schemes.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Instead, the campaign used compromised legitimate accounts to trick victims into installing malware.",
                    "is_evidence": 0
                },
                {
                    "sent": "Organizations can also take advantage of Trend Micro™ Deep Discovery™, a solution that provides detection, in-depth analysis, and proactive response to today’s stealthy malware and targeted attacks in real time.",
                    "is_evidence": 0
                },
                {
                    "sent": "We also observed MuddyWater’s use of multiple open source post-exploitation tools, which they deployed after successfully compromising a target.",
                    "is_evidence": 0
                },
                {
                    "sent": "We also unearthed and detailed our other findings on MuddyWater, such as its connection to four Android malware families and its use of false flag techniques, among others, in our report “New MuddyWater Activities Uncovered: Threat Actors Used Multi-Stage Backdoors, False Flags, Android Malware, and More.”",
                    "is_evidence": 0
                },
                {
                    "sent": "While MuddyWater appears to have no access to zero-days and advanced malware variants, it still managed to compromise its targets.",
                    "is_evidence": 0
                }
            ]
        },
        {
            "link": "https://ti.qianxin.com/blog/articles/analysis-of-muddyc3-a-new-weapon-used-by-muddywater/",
            "content": "Considering the completeness of the decompiled control program, it should be an earlier version used by MuddyWater which could serve as a prototype for a post-infiltration framework. From February to April 2019, it launched a series of spear-phishing attacks against governments, educational institutions, financial, telecommunications and defense companies in Turkey, Iran, Afghanistan, Iraq, Tajikistan and Azerbaijan. Image of the web control server: As well as its own infiltration tool, which is named as muddyc3 from the banner with version number 1.0.0. In early May of this year, hackers claimed in the Telegram channel (Channel: GreenLeakers) that they possess attack evidence and information regarding the MuddyWater APT group for sale. Later on, security researchers also posted related malicious samples and decompiled source code with the same version on Github https://github.com/0xffff0800/muddyc3. Yesterday (June 24) another telegram channel leaked the source code of muddyc3 and conducted related auctions.",
            "domain": "ti.qianxin.com",
            "tokenized": [
                {
                    "sent": "Considering the completeness of the decompiled control program, it should be an earlier version used by MuddyWater which could serve as a prototype for a post-infiltration framework.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "From February to April 2019, it launched a series of spear-phishing attacks against governments, educational institutions, financial, telecommunications and defense companies in Turkey, Iran, Afghanistan, Iraq, Tajikistan and Azerbaijan.",
                    "is_evidence": 0
                },
                {
                    "sent": "Image of the web control server: As well as its own infiltration tool, which is named as muddyc3 from the banner with version number 1.0.0.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "In early May of this year, hackers claimed in the Telegram channel (Channel: GreenLeakers) that they possess attack evidence and information regarding the MuddyWater APT group for sale.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Later on, security researchers also posted related malicious samples and decompiled source code with the same version on Github https://github.com/0xffff0800/muddyc3.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Yesterday (June 24) another telegram channel leaked the source code of muddyc3 and conducted related auctions.",
                    "is_evidence": 0,
                    "is_repeat": 0
                }
            ]
        },
        {
            "link": "https://shells.systems/reviving-leaked-muddyc3-used-by-muddywater-apt/",
            "content": "Despite broad scrutiny and reports on MuddyWater attacks, the activity continues with only incremental changes to the tools and techniques. Most recently they were connected to a campaign in March that targeted” organizations in Turkey, Pakistan, and Tajikistan.[0]. MuddyWater attacks are characterized by the use of a slowly evolving PowerShell-based first stage backdoor we call “POWERSTATS”. MuddyWater is a well-known threat actor group founded by Iran. They target groups across Middle East and Central Asia, primarily using spear phishing emails with malicious attachments. [1] In June 26 2019 a group called “Green Leakers” on telegram published screenshots of the C2 admin panel as you can see below along with screenshot of the muddyc3 c2 source code.",
            "domain": "shells.systems",
            "tokenized": [
                {
                    "sent": "Despite broad scrutiny and reports on MuddyWater attacks, the activity continues with only incremental changes to the tools and techniques.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Most recently they were connected to a campaign in March that targeted” organizations in Turkey, Pakistan, and Tajikistan.[0]",
                    "is_evidence": 0
                },
                {
                    "sent": "MuddyWater attacks are characterized by the use of a slowly evolving PowerShell-based first stage backdoor we call “POWERSTATS”.",
                    "is_evidence": 0
                },
                {
                    "sent": "MuddyWater is a well-known threat actor group founded by Iran.",
                    "is_evidence": 0
                },
                {
                    "sent": "They target groups across Middle East and Central Asia, primarily using spear phishing emails with malicious attachments.",
                    "is_evidence": 0
                },
                {
                    "sent": "[1] In June 26 2019 a group called “Green Leakers” on telegram published screenshots of the C2 admin panel as you can see below along with screenshot of the muddyc3 c2 source code.",
                    "is_evidence": 0
                }
            ]
        },
        {
            "link": "https://research.checkpoint.com/2019/the-muddy-waters-of-apt-attacks/",
            "content": "Ever since at least 2017, the attackers behind MuddyWater have used a simple yet effective infection vector: Spear-phishing. The next step is to steal legitimate documents from the compromised systems within that organization and then weaponize and distribute them to other unsuspecting victims. The well-crafted and socially engineered malicious documents then become the first stage of a long and mainly fileless infection chain that eventually delivers POWERSTATS, a signature PowerShell backdoor of this threat group. This powerful backdoor can receive commands from the attackers, enabling it to exfiltrate files from the system it is running on, execute additional scripts, delete files, and more. We have color coded the functions below, highlighting analogous functions to better show the similarities between the different graphs in this campaign, starting with the document from the infection flow we analyzed above Although it has focused most of its efforts on the Middle East region, the political affiliations, motives and purposes behind MuddyWater’s attacks are not very well\u0002defined, thus earning it its name. While these methods have remained consistent over the years, intermediate stages of this attack have been added, changed and removed due to several security vendors now aware of MuddyWater’s tactics, techniques and procedures.",
            "domain": "research.checkpoint.com",
            "tokenized": [
                {
                    "sent": "Ever since at least 2017, the attackers behind MuddyWater have used a simple yet effective infection vector: Spear-phishing.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "The next step is to steal legitimate documents from the compromised systems within that organization and then weaponize and distribute them to other unsuspecting victims.",
                    "is_evidence": 0
                },
                {
                    "sent": "The well-crafted and socially engineered malicious documents then become the first stage of a long and mainly fileless infection chain that eventually delivers POWERSTATS, a signature PowerShell backdoor of this threat group.",
                    "is_evidence": 0
                },
                {
                    "sent": "This powerful backdoor can receive commands from the attackers, enabling it to exfiltrate files from the system it is running on, execute additional scripts, delete files, and more.",
                    "is_evidence": 0
                },
                {
                    "sent": "We have color coded the functions below, highlighting analogous functions to better show the similarities between the different graphs in this campaign, starting with the document from the infection flow we analyzed above Although it has focused most of its efforts on the Middle East region, the political affiliations, motives and purposes behind MuddyWater’s attacks are not very well\u0002defined, thus earning it its name.",
                    "is_evidence": 0
                },
                {
                    "sent": "While these methods have remained consistent over the years, intermediate stages of this attack have been added, changed and removed due to several security vendors now aware of MuddyWater’s tactics, techniques and procedures.",
                    "is_evidence": 0
                }
            ]
        }
    ]
}