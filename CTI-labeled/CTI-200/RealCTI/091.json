{
    "event_id": "091",
    "claim": "In the study PT ESC specialists analyzed new versions of the malware used by APT31 in attacks from January to July this year.",
    "original_label": "true",
    "label": "true",
    "explain": "PT Expert Security Center (PT ESC) specialists regularly track the activity of hacker groups and the emergence of new information security threats (threat intelligence). During such monitoring in April 2021, a mailing list with previously unknown malicious content was sent to Mongolia. Some of the files found during the study had rather interesting names (“хавсралт.scr” [“havsralt.scr”] (mong. attachment), “Информация_Рб_июнь_2021_года_2021062826109.exe”) and, as the study showed, they contained a remote access trojan (RAT). Similar attacks were subsequently identified in Russia, Belarus, Canada, and the United States. According to PT ESC threat intelligence analysts, from January to July 2021, approximately 10 attacks were carried out using the discovered malware samples. A detailed analysis of malware samples, data on the paths on which working directories and registry keys were located, techniques and mechanisms used by the attackers (from the injection of malicious code to the logical blocks and structures used) helped correlate this malware with the activity of the APT31 group. This group, also known as Judgment Panda (CrowdStrike) and Zirconium (Microsoft), has been active since at least 2016. The group is presumed to be of Chinese origin, providing data to the Chinese government and state-owned enterprises to achieve political, economic, and military advantages. Cyberespionage is of key interest. The attackers' targets include the government sector, aerospace and defense enterprises, as well as international financial companies and the high-tech sector. In different years, the group's victims have included the government of Finland and, it is presumed, the governments of Norway and Germany too. The group also attacked organizations and individuals close to U.S. presidential candidates during the 2020 campaign. Recent attacks on companies in France, involving the hacking of home and office routers, have also been linked with the group. In this article, we will study the malware created by the group, focus in more detail on the types of droppers discovered and the tricks used by its developers. We will also present the criteria on the basis of which the attacks were attributed. The main objective of the dropper, the appearance of the main function of which is shown in Figure 1, is the creation of two files on the infected computer: a malicious library and an application vulnerable to DLL Sideloading (this application is then launched). Both files are always created over the same path: C:\\ProgramData\\Apacha. In the absence of this directory, it is created and the process is restarted. At the second stage, the application launched by the dropper loads the malicious library and calls one of its functions. It is noteworthy that MSVCR100.dll was chosen as the name of the malicious library in all cases. A library with an identical name is included in Visual C ++ for Microsoft Visual Studio. It is available on almost all PCs, but in a legitimate case it is located in the System32 folder (Figure 2). Moreover, the size of the malicious library is much smaller than the legitimate one.It is also worth noting the trick of the malware developers: by way of exports, the library contains names that can be found in the legitimate MSVCR100.dll. Without a doubt, this was done to make the malicious library as identical to the original version as possible. However, the number of exports in the malicious sample is much smaller, and most of them are ExitProcess calls. Below is an example of a call to a malicious function from the created library. After the call, control is transferred to the malicious code. Note that the names of malicious functions were most often those used during the regular loading of applications.During the analysis of malware samples, PT ESC specialists detected different versions of droppers that contain the same set of functions. The main difference is the name of the directory in which the files contained in the dropper will be created. However, in all the instances studied, the directories found in C:\\ProgramData\\ were used. The version of the dropper that downloads all files from the control server is worthy of particular note. Let's take a closer look. At the first stage, the presence of a working directory is also checked, after which connection is made to the control server and the necessary data is downloaded from it.Execution commences with receipt of a list of launched processes. That said, this has no impact on anything and is not used anywhere. The library then checks for the presence of the file C:\\ProgramData\\Apacha\\ssvagent.dll. This is the encrypted main load downloaded from the server. If this file does not exist, then the address of the control server from which the download will be performed is decrypted. In fact, this is a 5-byte XOR with a key built into the library. Inside the binary file, the key is stored in the form xmmword with the constant 9000000090000000900000009h (the fifth byte is added to the memory by the malware itself using the direct address). In fact, encryption is performed with byte 0x9. After decrypting the C2 address, it connects to the control server and downloads the encrypted payload from it. Then the received data is saved in the file C:\\ProgramData\\Apacha\\ssvagent.dll, and the legitimate application ssvagent.exe is restarted. The main part of the described functions is presented in Figure 11.If the payload has been loaded earlier, it is checked for an application that is already running. To do this, a mutex named ssvagent is created; if it has been created, the application ends. The library then writes the legitimate ssvagent.exe to startup via the registry, as shown in Figure 12.After this, the file downloaded from the server is decrypted using a XOR operation with a 5-byte key. (The algorithm and key shown in Figure 10 differ from those used when decrypting the address of the control server.) Just as when decrypting the address of the control server, the key is stored in the form xmmword and is a constant: 1100000033000000060000000Eh. The fifth byte is identical in all cases; its value is 0x12. The values of const_1 and const_2 are identical and remain unchanged from package to package (unit value equalized to 4 bytes value). To generate a hash, which is preceded by the main heading, the malware obtains the MAC address and PC name (the result of executing GetComputerNameExW). These values are concatenated (without using any separators), after which an MD5 hash is taken from the resulting value, which is then converted into a string. An example of hash generation is presented in Figure 14.Heading fields decrStr_1 through decrStr_4 are not generated by the malware and are not collected on the infected computer. All values are encrypted inside the malware. Each value is decrypted separately and is added to the heading. The decrStr_4 field depends on the bitness of the operating system, which ultimately leads to different offsets of the encrypted data transferred to the decryption function (Figure 17) as an argument. The format of a complete generated package is presented below. The main heading is highlighted in green; the hash, in red; the encrypted data, in yellow.It is noteworthy that some of them duplicate each other's functions, and some are identical in terms of code implementation. This is most likely connected with the fact that the potential malware version is 1.0. This assumption is based on the value embedded in the code and contained in the network packages. The code for processing the last command is particularly intriguing: all the created files and registry keys are deleted using a bat-file.During their investigation, PT ESC specialists found a Secureworks report describing the APT31 DropboxAES RAT trojan. Analysis of the detected malware instances allows us to assert that the group is also behind the attack we studied. Numerous overlaps were found in functionality, techniques and mechanisms used, starting with the injection of malicious code (up to the names of the libraries used) and ending with logical blocks and structures used inside the program code. The paths along which the malware working directories are located and the registry keys through which the persistence mechanism and their identity to the working directories are provided are also identical. In addition, the command handlers executed by the malware proved to be extremely similar, while the self-delete mechanism is identical. The main difference between this version of the malware and that reviewed by Secureworks lies in the communication of the main load with the control server. In the cases studied, there was a custom communication protocol that Dropbox does not use to exchange data.In the study PT ESC specialists analyzed new versions of the malware used by APT31 in attacks from January to July this year. The revealed similarities with earlier versions of malicious samples described by researchers, such as in 2020, suggest that the group is expanding the geography of its interests to countries where its growing activity can be detected, Russia in particular. We believe that further instances will be revealed soon of this group being used in attacks, including against Russia, along with other tools that might be identified by code correspondence or network infrastructure.\n\n\n",
    "reports": [
        {
            "link": "https://www.secureworks.com/research/bronze-vinewood-targets-supply-chains/",
            "content": "Evidence gleaned from network intrusions demonstrates that the threat group can successfully leverage publicly available tools and use popular file and code-sharing websites to blend C2 traffic with legitimate network traffic. Secureworks incident responders observed the threat actors conducting credential dumps roughly once every four weeks using Mimikatz installed on compromised domain controllers. The Secureworks® Counter Threat Unit™ (CTU) research team is publicly sharing insights about BRONZE VINEWOOD and its use of the HanaLoader malware and DropboxAES RAT to increase visibility of the threat group’s activities. The following analysis was compiled and published to Threat Intelligence clients in April 2019. The threat group is notable for its use of file and code-sharing sites, such as Dropbox and GitHub, for command and control of its malware. The threat group tends to use the same name (e.g., systemsvc) for all malicious services within a compromised environment, which can be a useful detection mechanism.",
            "domain": "www.secureworks.com",
            "tokenized": [
                {
                    "sent": "Evidence gleaned from network intrusions demonstrates that the threat group can successfully leverage publicly available tools and use popular file and code-sharing websites to blend C2 traffic with legitimate network traffic.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Secureworks incident responders observed the threat actors conducting credential dumps roughly once every four weeks using Mimikatz installed on compromised domain controllers.",
                    "is_evidence": 0
                },
                {
                    "sent": "The Secureworks® Counter Threat Unit™ (CTU) research team is publicly sharing insights about BRONZE VINEWOOD and its use of the HanaLoader malware and DropboxAES RAT to increase visibility of the threat group’s activities.",
                    "is_evidence": 0
                },
                {
                    "sent": "The following analysis was compiled and published to Threat Intelligence clients in April 2019.",
                    "is_evidence": 0
                },
                {
                    "sent": "The threat group is notable for its use of file and code-sharing sites, such as Dropbox and GitHub, for command and control of its malware.",
                    "is_evidence": 0
                },
                {
                    "sent": "The threat group tends to use the same name (e.g., systemsvc) for all malicious services within a compromised environment, which can be a useful detection mechanism.",
                    "is_evidence": 0
                }
            ]
        },
        {
            "link": "https://blog.google/threat-analysis-group/how-were-tackling-evolving-online-threats/",
            "content": "As part of our wider tracking of APT31 activity, we've also seen them deploy targeted malware campaigns. Every malicious piece of this attack was hosted on legitimate services, making it harder for defenders to rely on network signals for detection. In a separate campaign, attackers posed as recruiting professionals to lure targets into downloading malware. In one example, attackers impersonated McAfee. The Iranian attacker group (APT35) and the Chinese attacker group (APT31) targeted campaign staffers’ personal emails with credential phishing emails and emails containing tracking links. The malware was a python-based implant using Dropbox for command and control.",
            "domain": "blog.google",
            "tokenized": [
                {
                    "sent": "As part of our wider tracking of APT31 activity, we've also seen them deploy targeted malware campaigns.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Every malicious piece of this attack was hosted on legitimate services, making it harder for defenders to rely on network signals for detection.",
                    "is_evidence": 0
                },
                {
                    "sent": "In a separate campaign, attackers posed as recruiting professionals to lure targets into downloading malware.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "In one example, attackers impersonated McAfee.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "The Iranian attacker group (APT35) and the Chinese attacker group (APT31) targeted campaign staffers’ personal emails with credential phishing emails and emails containing tracking links.",
                    "is_evidence": 0
                },
                {
                    "sent": "The malware was a python-based implant using Dropbox for command and control.",
                    "is_evidence": 0,
                    "is_repeat": 0
                }
            ]
        },
        {
            "link": "https://blog.google/threat-analysis-group/how-were-tackling-evolving-online-threats/",
            "content": "Adding this conclusion to the contextual information we have, Microsoft’s independent attribution of CVE-2017-0005 to a Chinese APT, and NSA’s attribution of CVE-2019- 0803 to “Chinese State-Sponsored Actors”, make us believe that the exploit of CVE-2017- 0005 was indeed used by attackers that are part of a Chinese group. As part of our ongoing research on Windows LPE exploits, and tracking exploit authors, we started analyzing exploits attributed to Chinese APTs. Despite our attempts, we couldn’t manage to trace back the full code names for these exploits. In our review of Microsoft’s report on the vulnerability that was caught exploited in the wild and was attributed to Zirconium (APT31), we found a few interesting details: Armed with these two leads, and already familiar with the packer used by these exploits, we set out to find the described exploit of CVE-2017-0005. In the last few months, our malware and vulnerability researchers focused on recent Windows Privilege Escalation exploits attributed to Chinese actors. We do recommend this lead for a future work publication and invite security researchers worldwide to examine this connection.",
            "domain": "blog.google",
            "tokenized": [
                {
                    "sent": "Adding this conclusion to the contextual information we have, Microsoft’s independent attribution of CVE-2017-0005 to a Chinese APT, and NSA’s attribution of CVE-2019- 0803 to “Chinese State-Sponsored Actors”, make us believe that the exploit of CVE-2017- 0005 was indeed used by attackers that are part of a Chinese group.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "As part of our ongoing research on Windows LPE exploits, and tracking exploit authors, we started analyzing exploits attributed to Chinese APTs.",
                    "is_evidence": 0
                },
                {
                    "sent": "Despite our attempts, we couldn’t manage to trace back the full code names for these exploits.",
                    "is_evidence": 0
                },
                {
                    "sent": "In our review of Microsoft’s report on the vulnerability that was caught exploited in the wild and was attributed to Zirconium (APT31), we found a few interesting details: Armed with these two leads, and already familiar with the packer used by these exploits, we set out to find the described exploit of CVE-2017-0005.",
                    "is_evidence": 0
                },
                {
                    "sent": "In the last few months, our malware and vulnerability researchers focused on recent Windows Privilege Escalation exploits attributed to Chinese actors.",
                    "is_evidence": 0
                },
                {
                    "sent": "We do recommend this lead for a future work publication and invite security researchers worldwide to examine this connection.",
                    "is_evidence": 0
                }
            ]
        },
        {
            "link": "https://research.checkpoint.com/2021/the-story-of-jian/",
            "content": "Adding this conclusion to the contextual information we have, Microsoft’s independent attribution of CVE-2017-0005 to a Chinese APT, and NSA’s attribution of CVE-2019-0803 to “Chinese State-Sponsored Actors”, make us believe that the exploit of CVE-2017-0005 was indeed used by attackers that are part of a Chinese group. As part of our ongoing research on Windows LPE exploits, and tracking exploit authors, we started analyzing exploits attributed to Chinese APTs. Despite our attempts, we couldn’t manage to trace back the full code names for these exploits. In our review of Microsoft’s report on the vulnerability that was caught exploited in the wild and was attributed to Zirconium (APT31), we found a few interesting details:Armed with these two leads, and already familiar with the packer used by these exploits, we set out to find the described exploit of CVE-2017-0005. In the last few months, our malware and vulnerability researchers focused on recent Windows Privilege Escalation exploits attributed to Chinese actors. We began with analyzing “Jian”, the Chinese (APT31 / Zirconium) exploit for CVE-2017-0005, which was reported by Lockheed Martin’s Computer Incident Response Team.",
            "domain": "research.checkpoint.com",
            "tokenized": [
                {
                    "sent": "Adding this conclusion to the contextual information we have, Microsoft’s independent attribution of CVE-2017-0005 to a Chinese APT, and NSA’s attribution of CVE-2019-0803 to “Chinese State-Sponsored Actors”, make us believe that the exploit of CVE-2017-0005 was indeed used by attackers that are part of a Chinese group.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "As part of our ongoing research on Windows LPE exploits, and tracking exploit authors, we started analyzing exploits attributed to Chinese APTs.",
                    "is_evidence": 0
                },
                {
                    "sent": "Despite our attempts, we couldn’t manage to trace back the full code names for these exploits.",
                    "is_evidence": 0
                },
                {
                    "sent": "In our review of Microsoft’s report on the vulnerability that was caught exploited in the wild and was attributed to Zirconium (APT31), we found a few interesting details:Armed with these two leads, and already familiar with the packer used by these exploits, we set out to find the described exploit of CVE-2017-0005.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "In the last few months, our malware and vulnerability researchers focused on recent Windows Privilege Escalation exploits attributed to Chinese actors.",
                    "is_evidence": 0
                },
                {
                    "sent": "We began with analyzing “Jian”, the Chinese (APT31 / Zirconium) exploit for CVE-2017-0005, which was reported by Lockheed Martin’s Computer Incident Response Team.",
                    "is_evidence": 0
                }
            ]
        }
    ]
}