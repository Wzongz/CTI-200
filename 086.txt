{
  "event_id": "086",
  "claim": "Operation Ghost shows that the Dukes never stopped their espionage activities.",
  "original_label": "true",
  "label": "true",
  "explain": "It is exceptionally rare for a well-documented threat actor, previously implicated in very high-profile attacks, to stay completely under the radar for several years. Yet, in the last three years that is what APT group the Dukes (aka APT29 and Cozy Bear) has done. Despite being well known as one of the groups to hack the Democratic National Committee in the run-up to the 2016 US election, the Dukes has received little subsequent attention. The last documented campaign attributed to them is a phishing campaign against the Norwegian government that dates back to January 2017. In this white paper, we describe how we uncovered that the Dukes had been running successful espionage campaigns while avoiding public scrutiny, thanks to stealthy communication techniques and retooling. We call these newly uncovered Dukes campaigns, collectively, Operation Ghost, and describe how the group has been busy compromising government targets, including three European Ministries of Foreign Affairs and the Washington DC embassy of a European Union country, all without drawing attention to their activities.The Dukes, also known as APT29 and Cozy Bear, is an infamous cyberespionage group active since at least 2008. In particular, it is known for being one of the adversaries to have breached the Democratic National Committee during the 2016 US presidential election [1]. It was even featured in a joint report issued by the FBI and the Department of Homeland Security (DHS), as part of malicious cyber-activities the report dubbed Grizzly Steppe [2]. That report was published in 2017 and describes malicious activities that occurred around the presidential election of 2016. This section is a summary of the group’s previously documented activities to refresh the reader’s memory, since the last related publication dates from almost three years ago. Our most recent discoveries are detailed in the subsequent sections of this white paper.Even though the group’s activities are believed to have started in 2008, the first public report was released in 2013 with the analysis of MiniDuke by Kaspersky [3]. Over the next two years, multiple reports dissected the Dukes’ arsenal, including a comprehensive summary by F-Secure of the group’s activities from 2008 to 2015 [4]. One of the most recent attacks that we can link to the Dukes is the January 2017 phishing attempt against the Ministry of Foreign Affairs, the Labour Party and the Armed Forces of Norway [5]. Since then, most security experts have believed the Dukes went dark or completely changed their arsenal to pursue their mission. In November 2018, a strange phishing campaign hit dozens of different organizations in the United States, including government agencies, and think tanks. The attack leveraged a malicious Windows shortcut (a .lnk file) that bore similarities to a malicious shortcut used by the Dukes in 2016. However, that earlier sample was available in a public malware repository for many years, allowing another actor to easily conduct a false-flag operation. In addition, there is no evidence that any custom malware used only by the Dukes was employed during this attack. From FireEye’s detailed analysis of the attack [6], it was not possible to make a high-confidence attribution to this threat actor. Figure 1 summarizes the important events of the Dukes history. Some activities related to Operation Ghost are also presented to help understand the overlap between all the events. Over the years, it has been possible to draw the big picture of the Dukes main targets. The group is primarily interested in spying on governments either in the West or in former USSR countries. Besides governments, the group has also targeted various organizations linked to NATO, think tanks, and political parties. This targeting suggests a clear interest in collecting information allowing a better understanding of future international political decisions, which would seem of most interest to a government. Unlike other groups such as GreyEnergy [7] and TeleBots [8], it is important to note that we have never seen the Dukes engaged in cybersabotage operations. Surprisingly though, the group also has conducted spying operations outside its main focus. In 2013, Kaspersky researchers found evidence that part of the Dukes toolset had been used against drug dealers in Russia [9]. This may suggest that this toolset is not only used for collecting foreign intelligence but also for conducting LE investigations of criminal activities. The Dukes group is known to be a major player in the espionage scene. It is associated with a large toolset with more than ten different malware families written in C/C++ [10], PowerShell [11], .NET [12] and Python [13]. It has also adopted living-off-the-land tactics, misusing standard IT tools such as PsExec and Windows Management Instrumentation (WMI). As mentioned before, we invite our readers to read the F-Secure summary [4] for an analysis of the earlier malware platforms used by this threat actor.The group’s main initial tactic to breach a network is to send spearphishing emails that contain a link or an attachment. Figure 2 is an example of one such campaign, which occurred at the end of 2016. In order to increase the attackers’ chances, it is designed to be a subject of particular interest of the recipient. This is different from mass-spreading malicious email campaigns where the same email is sent to hundreds or thousands of people by crimeware actors.When targets click on these malicious links or attachments, a .zip archive that contains a malicious, macro-enabled Word document and a decoy (as shown in Figure 3) will be downloaded. If victims then open the malicious document and enable the macro, it will then install the PowerDuke backdoor [14]. In other cases, malicious Windows shortcuts (.lnk files) have been used instead of Word documents with malicious macros.However, this is not the only method used by the Dukes to gain initial access. In 2014, the Dukes started using two mass-spreading methods to deliver the OnionDuke implant:OnionDuke has some capabilities outside the standard espionage features, such as a Denial of Service (DoS) module, but we have not observed them used in the wild. Finally, the Dukes are also known for using multiple implants to compromise a target. It is very common to see an implant delivering another one to regain control of a system.The Dukes have employed several interesting tactics to hide the communications between the implants and their C&C servers, including the use of social media platforms and steganography. MiniDuke [17] and HammerDuke [12] leveraged Twitter to host their C&C URLs. In addition, they use a Domain Generation Algorithm (DGA) to generate new Twitter handles. Each time the malware generates a new handle, it fetches the Twitter page corresponding to that handle and searches the page for a specific pattern, which is the encrypted C&C URL. In CloudDuke [18], the operators leveraged cloud storage services such as OneDrive as their C&C channels. They were not the first group to use this technique, but it is generally effective for the attackers as it is harder for defenders to spot hostile connections to legitimate cloud storage services than to other “suspicious” or low-reputation URLs. Moreover, the Dukes like to use steganography to hide data, such as additional payloads, in pictures. It allows them to blend into typical network traffic by transferring valid images while its true purpose is to allow the backdoor to communicate with the C&C server. This technique has been described in Volexity’s PowerDuke blogpost [14]After 2017, it was not clear how the Dukes evolved. Did they totally stop their activities? Did they fully re-write their tools and change their tradecraft? We spent months apparently chasing a ghost then, a few months ago, we were able to attribute several distinct intrusions to the Dukes. During the analysis of those intrusions, we uncovered several new malware families: PolyglotDuke, RegDuke and FatDuke. We call the Dukes’ campaigns using these newly discovered tools Operation Ghost.We believe Operation Ghost started in 2013 and was still ongoing as of this writing. Our research shows that the Ministry of Foreign Affairs in at least three different countries in Europe are affected by this campaign. We also have discovered an infiltration by the Dukes at the Washington, DC embassy of a European Union country. This targeting is not surprising, and it shows that the Dukes are still active in high-profile organizations. We also believe that more organizations around the world might be affected but due to the use of unique C&C infrastructure for each victim, we were not able to identify other targets. One of the first traces of this campaign is to be found on Reddit in July 2014. Figure 4 shows a message posted by one of the Dukes’ operators. The strange string using an unusual charset is the encoded URL of a C&C server and is used by PolyglotDuke as described in section 4.2.On one hand, we noticed numerous similarities in the tactics of this campaign in comparison to previously documented ones: However, an attribution based only on the presence of known Dukes tools on the same machines should be taken with a grain of salt. We also found two other APT threat actors – Turla [19] and Sednit [20] – on some of the same computers. On the other hand, we were able to find strong code similarities between already documented samples and samples from Operation Ghost. We cannot discount the possibility of a false flag operation; however, this campaign started while only a small portion of the Dukes’ arsenal was known. In 2013, at the first known compilation date of PolyglotDuke, only MiniDuke had been documented and threat analysts were not yet aware of the importance of this threat actor. Thus, we believe Operation Ghost was run simultaneously with the other campaigns and has flown under the radar until now. PolyglotDuke (SHA-1: D09C4E7B641F8CB7CC86190FD9A778C6955FEA28), documented in detail in section 4.2 uses a custom encryption algorithm to decrypt the strings used by the malware. We found functionally equivalent code in an OnionDuke sample (SHA-1: A75995F94854DEA8799650A2F4A97980B71199D2) that was documented by F-Secure in 2014 [16]. It is interesting to note that the value used to seed the srand function is the compilation timestamp of the executable. For instance, 0x5289f207 corresponds to Mon 18 Nov 2013 10:55:03 UTC. The IDA screenshots in Figure 6 show the two similar functions.Similarly, the recent samples of the MiniDuke backdoor bear similarities with samples documented more than five years ago. Figure 7 is the comparison of a function in a MiniDuke backdoor listed by Kaspersky in 2014 [21] (SHA-1: 86EC70C27E5346700714DBAE2F10E168A08210E4) and a MiniDuke backdoor (SHA-1: B05CABA461000C6EBD8B237F318577E9BCCD6047) compiled in August 2018.Given the numerous similarities between other known Dukes campaigns and Operation Ghost, especially the strong code similarities, and the overlap in time with previous campaigns, we assess with high confidence that this operation is run by the Dukes.In Operation Ghost, the Dukes have used a limited number of tools, but they have relied on numerous interesting tactics to avoid detection. First, they are very persistent. They steal credentials and use them systematically to move laterally on the network. We have seen them using administrative credentials to compromise or re-compromise machines on the same local network. Thus, when responding to a Dukes compromise, it is important to make sure to remove every implant in a short period of time. Otherwise, the attackers will use any remaining implant to compromise the cleaned systems again. Second, they have a sophisticated malware platform divided in four stages:Figure 8 is a summary of the malware platform of Operation Ghost. During our investigation, we also found a previously unknown (and apparently now retired) third-stage backdoor, LiteDuke, that was used back in 2015. For the sake of historical completeness, it is analyzed in section 4.6.Third, we also noticed that the operators avoid using the same C&C network infrastructure between different victim organizations. This kind of compartmentalization is generally only seen by the most meticulous attackers. It prevents the entire operation from being burned when a single victim discovers the infection and shares the related network IoCs with the security communityWhen it comes to cyberespionage, it is not uncommon for the malware developers and operators to follow the standard working hours of the country where they are located. For instance, we previously showed that Sednit operators were generally working from 9 AM to 5PM in the UTC+3 time zone [20]. Previously, FireEye researchers noticed that the Dukes were also mainly operating in the UTC+3 time zone [12]. For Operation Ghost, we compiled three different types of timestamp in order to have an idea of their operational times:It should be noted that some of these timestamps may have been generated by an automated command system or an automated build system.Despite having analyzed the Dukes activities in several different organizations, we were not able to find the initial compromise vector. The group is known for sending well-crafted malicious emails, but we did not find any such samples. It should also be noted that two of the three targeted organizations we identified had previously been compromised by the Dukes, mainly in 2015. As such, it is highly possible that the attackers kept control over the compromised networks during this whole period. We observed them pivoting in an already-compromised network using lateral movement tools like PsExec and stolen administrative credentials. As such, from only a few compromised machines, they are able to expand their operations.PolyglotDuke is a downloader that is used to download and drop the MiniDuke backdoor. As mentioned in section 3.2 and shown in Figure 6, this downloader shares several similarities with other samples from previous Dukes campaigns such as the use of Twitter to retrieve and decode its C&C server address, as well as a custom string encryption implementation. Both 32- and 64-bit versions of PolyglotDuke were observed and have similar behavior. We dubbed this downloader PolyglotDuke in reference to its use of charsets from different languages to encode the C&C addresses. PolyglotDuke’s dropper embeds an encrypted PolyglotDuke within a resource type named GIF with the ID 129. The resource is encrypted with the following algorithm, using the string GIF89 from the resource (which is the 5 first magic bytes of the start of the GIF header) as the key:After decryption, the DLL is written to the current working directory and executed using rundll32.exe. The custom string encryption algorithm used by the PolyglotDuke dropper is identical to the one used by PolyglotDuke, as well as other samples from previous Dukes campaigns, and is depicted in Figure 7. As mentioned in section 3.2, it’s worth noting that this dropper shares a great deal of functionality with OnionDuke, such as the use of a GIF resource, the use of the same algorithm with the string GIF89 as key to decrypt the resource, and the use of the same custom encryption algorithm to encrypt the strings.Strings from PolyglotDuke are decrypted using two different algorithms. The string is either RC4 encrypted using the CryptDecrypt API where the key is derived from the system directory path with the drive letter removed, or using the custom encryption algorithm shown in Figure 6. An IDA Python script to decrypt these strings is provided in our GitHub repository. The C&C server address is retrieved and decoded from various public webpages such as Imgur, ImgBB or Fotolog posts, tweets, Reddit comments, Evernote public notes, etc. Several encrypted public webpage URLs are hardcoded in each sample (from three to six URLs in a single sample) and it will iterate over the hardcoded list of C&C server addresses until it is able to decode a valid C&C URL successfully. An example of a public webpage containing an encoded C&C URL is shown Figure 10. After retrieving the content of one of these webpages, PolyglotDuke parses it to find two delimiter strings and extracts the content between them. The extracted UTF-8 string uses a particular character set within a Unicode block such as Katakana [22], Cherokee [23] or Kangxi radicals [24]. Any given sample can only decode a C&C URL encoded in one of those charsets. The string is first converted to UTF-16, only the last byte of each codepoint is kept, then a custom mapping is used to transpose this to printable ASCII. The order of the characters of the resulting string is then reversed, resulting in the C&C URL. A script to decrypt the C&C URL, regardless of the Unicode range used, is provided on our GitHub repository. Interestingly, the text from the delimiter strings usually makes sense in the context of the fake post. The decoded C&C URL points to a PHP script with which the downloader communicates using GET requests, as described in the next section.The GET argument values are randomly generated but the first random string in each request should comply with a constraint based on a specific integer (see below). A string will be randomly regenerated until one complies with the constraints. The digits from the string representation of the MD5 hash of the randomly generated string are summed, and then modulo 5 of this value must match a specific integer. The communication with the C&C server to retrieve a payload follows this sequence:This sequence continues until a path to a file is provided between the  strings and the file downloaded. The communication steps are summarized in Figure 12. Interestingly, the root URLs of the C&C server used by PolyglotDuke redirect to domains with similar names hosting legitimate websites. This technique is probably used in order to avoid suspicion when investigating the traffic with the C&C server. For one of the C&C servers, the attackers forgot to add a TLD to the redirected domain. Examples of redirection are shown in Table 2.A data blob containing encrypted data is appended to the end the downloaded file: this technique allows data to be easily included in a JPEG or PNG image download in a way that means the image remains valid. We couldn’t retrieve any of the files downloaded by PolyglotDuke to confirm this hypothesis but the way the encrypted blob is added to such files in addition to their extension being .jpg or .png lead us to think that they were valid images used to look like legitimate traffic. To extract the payload from the file downloaded from the C&C server, PolyglotDuke will first decrypt the last eight bytes with RC4 using the same key as the one used for strings decryption. The first four decrypted bytes correspond the offset to the embedded blob relative to the end of the file and the last four bytes provide a value used as integrity check; that value is the same as the first four bytes at the beginning of the blob. The structure of the file is described in Figure 13.After obtaining the offset to the embedded blob and checking the integrity value, the size of the RC4-encrypted blob is retrieved from immediately afterward. Then, next to the encrypted blob, we find the signed SHA-1 hash of the blob. Before decrypting the blob, the hash signature is checked against an RC4-encoded public key hardcoded in the binary. The signature verification procedure is shown in Figure 14 , while the public key used to check the hash signature is shown in Figure 15. This technique ensures that only a payload signed by the operators could be executed on the victim’s machine, since the private key used to sign the hash is needed to generate a valid signature. After having successfully checked the hash signature of the encrypted blob, it is decrypted using the same key used for the RC4-encrypted strings. The format of the decrypted blob is shown in Figure 16. Notice that the same delimiter value is used and checked at various positions of the blob (in the example in Figure 16 it is 0x1BD75010). Two of the bytes between the first two delimiters define the action to be taken with the decrypted blob. The value immediately following the second delimiter is the size of the data, being either a PE or an encrypted configuration, followed by the data itself followed by a third delimiter, the size of the subsequent filename, and finally the filename itself. The correct extension (.dll or .exe) will be appended to the filename of the PE to be written, depending on the executable type. The list of valid combinations and their respective behaviors is shown on Table 3. RegDuke is a first-stage implant that is apparently used only when attackers lose control of the other implants on the same machine. Its purpose is to stay undetected as long as possible to help make sure the operators never lose complete control of any compromised machine. It is composed of a loader and a payload, the latter being stored encrypted on the disk. Both components are written in .NET. RegDuke persists by using a WMI consumer named MicrosoftOfficeUpdates. It is launched every time a process named WINWORD.EXE is started. Our analysis is based on the sample with SHA-1 0A5A7DD4AD0F2E50F3577F8D43A4C55DDC1D80CF.Between August 2017 and June 2019, we have seen four different main versions of the loader. The first version was not obfuscated and had the encryption key hardcoded in the code. Later versions read the encryption key from the Windows registry and use different types of obfuscation such as control-flow flattening or directly using .NET Reactor, a commercial obfuscator. Figure 17 is a sample of RegDuke obfuscated with .NET Reactor.The flow of the loader is simple. It reads the encrypted file at either a hardcoded path or at a value extracted from the Windows registry, as shown in Figure 18.Then, it decrypts it using a password and a salt either hardcoded in the loader or stored in the Windows registry. The encryption key and the initialization vector are derived from the password and the salt using the technique described in RFC 2898, also known as PBKDF2, as shown in Figure 19.The payload is a backdoor that resides in memory only, and that uses Dropbox as its C&C server. Its configuration is hardcoded in an internal class, shown in Figure 20. Our analysis is based on the sample with SHA-1 5905C55189C683BC37258AEC28E916C41948CD1C.We have seen the following clientId values being used: collection_3, collection_4, collection_6, collection_7, collection_8 and collection_99. However, other than collection_4, we were not able to determine the targets for these collections.The backdoor regularly lists the Dropbox directory corresponding to its clientId and downloads PNG files from it. The downloaded PNG files are valid pictures, as you can see in Figure 21.However, the attackers have used steganography to hide data in the pictures. In Figure 22, you can see the code looping over all the pixels of the image and extracting data from them. Each pixel is encoded into 24 bits: 8 for red, 8 for green and 8 for blue. The developers use a technique called “Least Significant Bit” to store 8 bits of data in each pixel, as shown in Figure 23. This technique has been used previously by other malware such as Gozi [25]. They extract two bits from the red value, three from the green and three from the blue.The steganographically altered image has almost no visible difference from the original image because the two or three least significant bits have a very limited impact on the color. For the green and blue components of each pixel a maximum of 7/256, and for the red component 3/256 of a fully saturated pixel variation will occur. Figure 24 shows a blue of value 255 (on the left) and the maximum deviation from that in just the blue spectrum with a value of 248 (on the right). There is apparently no difference but, by doing that on every pixel of the image, allows the attacker to store a backdoor in a still valid PNG image.As highlighted in section 3.2, the most recent versions of the MiniDuke backdoor have a lot of code similarities with earlier versions, such as the sample with SHA-1 of 86EC70C27E5346700714DBAE2F10E168A08210E4, described by Kaspersky researchers in 2014 [21]. Our analysis is based on the sample with SHA-1 B05CABA461000C6EBD8B237F318577E9BCCD6047, compiled on August 17, 2018. MiniDuke acts as a second-stage backdoor, which is dropped by one of the two first-stage components described in the sections above. The most recent samples we are aware of were compiled in June 2019 and show no major changes, except the C&C domain and the use of an invalid (likely transplanted) digital signature, as shown in Figure 25. This might be an attempt to bypass some security products.The backdoor is still written in pure x86 assembly but its size increased a lot – from 20 KB to 200+ KB. This is due to the addition of obfuscation, mainly control-flow flattening [26], as shown in Figure 26. This is a common obfuscation technique that makes it difficult to read the code because every function is split in a switch/case inside a loop.Some of the Windows API functions are resolved dynamically. The backdoor uses a simple hash function to obfuscate the name of the function it tries to resolve. The network communication is relatively simple. It can use the GET, POST and PUT HTTP methods to contact the hardcoded C&C server. In order to blend into the legitimate traffic, the data are prepended with a JPEG header. The resulting images are not valid, but it is very unlikely that anybody will check the validity of all pictures in the network traffic. Figure 27 is an example of a POST request to the C&C server. As the server was down at the time of capture, we were not able to receive a reply, but we believe the reply also contains a JPEG header, as the malware ignores the first bytes of the reply.In addition to the HTTP protocol, the malware is able to send and receive data over a named pipe. This feature typically allows it to reach machines on the local network that don’t have internet access. One compromised machine, with internet access, will forward commands to other compromised machines through the named pipe. A similar feature to the named pipe is the HTTP proxy. The malware will listen on a first socket, either on the default port 8080 or on a port specified by the operators. It will also open a second socket with the C&C server. It waits for connections on the first socket and when one is established, it proxies data between the two sockets. Thus, a machine without internet access, or with a firewall that blocks connections to the attackers’ domain, might still be able to reach the C&C through the proxy machine. FatDuke is the current flagship backdoor of the group and is only deployed on the most interesting machines. It is generally dropped by the MiniDuke backdoor, but we also have seen the operators dropping FatDuke using lateral movement tools such as PsExec. The operators regularly repack this malware in order to evade detections. The most recent sample of FatDuke we have seen was compiled on May 24, 2019. We have seen them trying to regain control of a machine multiple times in a few days, each time with a different sample. Their packer, described in a later section, adds a lot of code, leading to large binaries. While the effective code should not be larger than 1MB, we have seen one sample weighing in at 13MB, hence our name for this backdoor component: FatDuke. In this section, we will use the sample with SHA-1 DB19171B239EF6DE8E83B2926EADC652E74A5AFA for our analysis.During our investigation, we were not able to find a dropper for FatDuke. We believe the operators simply install the backdoor and establish persistence using the standard commands of an earlier stage backdoor. We also noted that FatDuke generally replaced the second-stage binary, reusing the persistence mechanism already in place. The persistence we have seen is very standard. They use the registry key HKLM\\SOFTWARE\\Microsoft\\ Windows\\CurrentVersion\\Run and creatd a new value named Canon Gear and value C:\\Program Files\\Canon\\Network ScanGear\\Canocpc.exe. This launches the backdoor each time a user logs in.Next, FatDuke contacts the C&C server, specified in the config, and uses one of the PHP scripts specified in the php_aliases field of the config. It is interesting to note that these filenames are related to the theme of the C&C server domain. For example, they registered the domain westmedicalgroup[.]net, and the aliases list contains filenames such as doctors.php or diagnostics.php. Figure 30 is a summary of the C&C protocol.The requests sent to the C&C server are crafted to look like typical GET requests and once again are related to the script name. For example, the request below uses parameters that you might expect to find on a forum’s website.However, while some fields are randomly generated strings, article and user could be used by the operator to pinpoint the victim. The first keyword, article, is an identifier – a SHA-256 hash of the volume identifier concatenated with MAC addresses found on the target computer. The other keyword, user, probably flags the general configuration that comes with the malware. This value is located in the PE resource section, right before the encoded configuration mentioned in section 4.5. The reply is an HTML page, with the HTML content copied from a legitimate website such as the BBC. However, if the C&C server wants to send a command to the malware, it will add an additional HTML img tag to the page, as shown in Figure 31.This will return a file, such as that shown in Figure 32. These files masquerade as PNG images in the GET request, but are not valid images. They contain a header of 0x37 bytes, matching one hardcoded in the malware, and a chunk of encrypted data that is base64 encoded. To further the PNG subterfuge, the header contains an incomplete, misplaced and corrupted PNG header, which may be sufficient to avert concern under cursory examination.The C&C servers used for FatDuke do not seem to be compromised websites. In order to look legitimate, they register variants of existing domains and redirect the homepage of their C&C server to the homepage of the real domain. As mentioned before, this technique is also used for PolyglotDuke C&C servers. For example, they registered the domain fairfieldsch[.]org and make it redirect to fairfields.northants.sch.uk, the website of a school in the UK. We also noticed that they used several C&C servers per targeted organization, but these servers apparently don’t overlap across the victims, ensuring tight compartmentalization. The FatDuke binaries are highly obfuscated. They use three different techniques in order to slow down analysis. First, they use string stacking for all important strings; this consists of building strings dynamically by pushing each character separately on the stack, rather than using strings from the .data section. They also add some basic operations to the stacking in order to prevent the extraction without emulating the code. Figure 34 shows such an example where the ASCII value of each letter is multiplied with a hardcoded value of 1.Second, they also add opaque predicates in most of the functions. Opaque predicates are conditions that are always True or always False. They are not part of the code's semantic, but the code is harder to read. Figure 35 is an example of opaque predicates we found in FatDuke. Whatever the result of rand() is, v11 is always equal to 15. Thus, the condition is always False.Third, they add junk code and junk strings. Unlike opaque predicates, the code will be executed but it is useless and again is not part of the semantics of the program. For example, the function in Figure 36 and in Figure 37 returns always the same value, which is never used.The binary contains a huge amount of strings from different projects like Chromium. It might be an attempt to bypass security products, similar to what was posted by SkyLight [27]. These strings are used to fill very large structures (about 1000 fields), probably to hide the few interesting fields used by the malware, as shown in Figure 38.We are not sure whether Dukes’ developers used a commercial obfuscation tool or if they developed their own. However, given their level of sophistication, it would not be surprising if they rely on their own obfuscator. LiteDuke is a third-stage backdoor that was mainly used in 2014-2015. It is not directly linked to Operation Ghost, but we found it on some machines compromised by MiniDuke. We chose to document it mainly because we did not find it described elsewhere. We have dubbed it LiteDuke because it uses SQLite to store information such as its configuration. Our analysis is based on the sample with SHA-1 AF2B46D4371CE632E2669FEA1959EE8AF4EC39CE.The backdoor code only exists in memory as only the loader is written to disk. The loader persists using a Windows shortcut (.lnk file) that is registered in the traditional CurrentVersion\\Run registry key. According to the PE header, the developers did not make use of Visual Studio to compile this backdoor. Figure 41 shows that they used the linker FASM 1.70. FASM (Flat Assembler) is an assembler that can produce Windows or Linux binaries. It reminds us of the MiniDuke backdoor, developed directly in x86 assembly.Interestingly, the malware apparently attempts to bypass Kaspersky security products by checking if the registry key HKCU\\Software\\KasperskyLab exists and if so, it waits 30 seconds before executing any additional code. We do not know whether this really bypasses any Kaspersky security products. The Crypto Container is an SQLite database, stored on the disk in the same directory as the loader, and uses SQLCipher. This SQLite extension encrypts the database using AES-256. The encryption key is the MD5 hash of machine-specific values (such as CPUID, the account name, the BIOS version and the processor name) to prevent decryption if, for example, the database ends up in a public malware repository. The key is not stored anywhere but is re-generated at each execution. The database contains three different tables, which are created using the following commands:The configuration default values are hardcoded in the binary. This SQLite table allows the malware operators to update these parameters easily. Similarly, the modules, which are plug-ins for the backdoor, are stored in the database. Since the database is encrypted, the modules never touch the disk in plaintext and will only be loaded into memory. Unfortunately, we have not yet been able to find any of the plug-ins used by LiteDuke. One artefact of the development method is the implementation of the backdoor commands. Usually, a backdoor will have a big switch statement to check the command sent by the C&C server against the list of commands implemented in the malware. In the case of LiteDuke, it is a succession of loops: one loop per implemented command, as shown in Figure 42. Each of the 41 different commands has between three and six possible command IDs. The program will loop successively on the list until the ID in the list matches the ID provided by the operator. The full list is available in Figure 43.Among the different samples we analyzed, the C&C domains are different, but they always use a script named rcv_get.php. We believe that the C&C domains are compromised servers. In order to blend into the network traffic, and similar to FatDuke, the malware checks the default browser and chooses its User-Agent request header accordingly, as shown in Table 7. It can also get the proxy configuration from Firefox, in the configuration file prej.js, or from Opera, in the operaprefs.ini file. This information is then used when establishing a connection to the C&C server.As one can see, some of these User-Agents are custom and they all refer to very old browsers, most of them released in 2011. It is also way less stealthy than with FatDuke’s sniffing of the real User-Agent used by the local browser. This reinforces our hypothesis that this backdoor was used many years ago and is no longer deployed in the wild.Operation Ghost shows that the Dukes never stopped their espionage activities. They were in the spotlight after the breach of the Democratic National Committee during the 2016 US presidential elections. However, they then recovered from that media attention and rebuilt most of their toolset. Using these new tools and previously used techniques, such as leveraging Twitter and steganography, they were able to breach Foreign Affairs Ministries of several European governments. This campaign also shows that APT threat actors going dark for several years does not mean they have stopped spying. They might pause for a while and re-appear in another form, but they still need to spy to fulfill their mandates. To help defenders better protect their networks, we will continue to monitor the Dukes’ developments. Indicators of Compromise can also be found on GitHub. For any inquiries, or to make sample submissions related to the subject, contact us at: threatintel@eset.com.\n\n\n",
  "reports": [
    {
      "link": "https://explore.avertium.com/resource/evolution-of-russian-apt29-new-attacks-and-techniques-uncovered/",
      "content": "Let’s examine APT29, their recent attacks, and what organizations can do to protect themselves. The campaign, discovered and investigated by Poland's Military Counterintelligence Service and CERT Polska (CERT.PL), involved APT29 hackers sending spear-phishing emails to specific personnel at diplomatic posts. The example of APT29's espionage campaign in April 2023 targeting diplomatic and foreign ministries of NATO and EU member states demonstrates that even well-established threat actors can evolve their tactics and develop previously undocumented malware payloads. The findings came on the heels of the disclosure of an APT29-led campaign aimed at NATO-affiliated organizations with the goal of accessing foreign policy information. The threat actors then used that update to deploy a massive cyberattack against the U.S. This exploit came to light after a successful phishing attack on an unspecified European diplomatic entity.",
      "domain": "explore.avertium.com",
      "tokenized": [
        {
          "sent":"Let’s examine APT29, their recent attacks, and what organizations can do to protect themselves.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent": "The campaign, discovered and investigated by Poland's Military Counterintelligence Service and CERT Polska (CERT.PL), involved APT29 hackers sending spear-phishing emails to specific personnel at diplomatic posts.",
          "is_evidence": 0
        },
        {
          "sent":"The example of APT29's espionage campaign in April 2023 targeting diplomatic and foreign ministries of NATO and EU member states demonstrates that even well-established threat actors can evolve their tactics and develop previously undocumented malware payloads.",
          "is_evidence": 0
        },
        {
          "sent": "The findings came on the heels of the disclosure of an APT29-led campaign aimed at NATO-affiliated organizations with the goal of accessing foreign policy information.",
          "is_evidence": 0
        },
        {
          "sent":"The threat actors then used that update to deploy a massive cyberattack against the U.S.",
          "is_evidence": 0
        },
        {
          "sent":"This exploit came to light after a successful phishing attack on an unspecified European diplomatic entity.",
          "is_evidence": 0
        }
      ]
    },
    {
      "link": "https://www.mandiant.com/resources/blog/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor/",
      "content": "The actors behind this campaign gained access to numerous public and private organizations around the world. They routinely removed their tools, including removing backdoors once legitimate remote access was achieved. This campaign’s post compromise activity was conducted with a high regard for operational security, in many cases leveraging dedicated infrastructure per intrusion. This can be done alongside baselining and normalization of ASN’s used for legitimate remote access to help identify suspicious activity. This is some of the best operational security that FireEye has observed in a cyber attack, focusing on evasion and leveraging inherent trust. This presents a detection opportunity for defenders -- querying internet-wide scan data sources for an organization’s hostnames can uncover malicious IP addresses that may be masquerading as the organization.",
      "domain": "www.mandiant.com",
      "tokenized": [
        {
          "sent":"The actors behind this campaign gained access to numerous public and private organizations around the world.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"They routinely removed their tools, including removing backdoors once legitimate remote access was achieved.",
          "is_evidence": 0
        },
        {
          "sent":"This campaign’s post compromise activity was conducted with a high regard for operational security, in many cases leveraging dedicated infrastructure per intrusion.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent": "This can be done alongside baselining and normalization of ASN’s used for legitimate remote access to help identify suspicious activity.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent": "This is some of the best operational security that FireEye has observed in a cyber attack, focusing on evasion and leveraging inherent trust.",
          "is_evidence": 0
        },
        {
          "sent": "This presents a detection opportunity for defenders -- querying internet-wide scan data sources for an organization’s hostnames can uncover malicious IP addresses that may be masquerading as the organization.",
          "is_evidence": 1,
          "is_repeat": 0
        }
      ]
    },
    {
      "link": "https://www.mandiant.com/resources/blog/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor/",
      "content": "Several elements from this campaign – including the resources invested in the phishing email and network infrastructure, the metadata from the weaponized shortcut file payload, and the specific victim individuals and organizations targeted – are directly linked to the last observed APT29 phishing campaign from November 2016. The following is a sample GET request: Figure 5 and Figure 6 show the overlapping characteristics between the LNK used in the recent spear phish emails, ds7002.lnk (MD5: 6ed0020b0851fb71d5b0076f4ee95f3c), compared to a suspected APT29 LNK from the November 2016 attack that led to the SPIKERUSH backdoor, 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk(MD5: f713d5df826c6051e65f995e57d6817d). The malicious LNK used in the recent spearphishing campaign, ds7002.lnk (MD5: 6ed0020b0851fb71d5b0076f4ee95f3c), has technical overlaps with a suspected APT29 LNK from November 2016, 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk(MD5: f713d5df826c6051e65f995e57d6817d), which was publicly reported by Volexity. The phishing emails were made to look like secure communication from a Public Affairs official at the U.S. Department of State, hosted on a page made to look like another Department of State Public Affairs official's personal drive, and used a legitimate Department of State form as a decoy. The threat actor crafted the phishing emails to masquerade as a U.S. Department of State Public Affairs official sharing an official document. There are several similarities and technical overlaps between the 14 November 2018, phishing campaign and the suspected APT29 phishing campaign on 9 November 2016, both of which occurred shortly after U.S. elections.",
      "domain": "www.mandiant.com",
      "tokenized": [
        {
          "sent":"Several elements from this campaign – including the resources invested in the phishing email and network infrastructure, the metadata from the weaponized shortcut file payload, and the specific victim individuals and organizations targeted – are directly linked to the last observed APT29 phishing campaign from November 2016.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"The following is a sample GET request: Figure 5 and Figure 6 show the overlapping characteristics between the LNK used in the recent spear phish emails, ds7002.lnk (MD5: 6ed0020b0851fb71d5b0076f4ee95f3c), compared to a suspected APT29 LNK from the November 2016 attack that led to the SPIKERUSH backdoor, 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk(MD5: f713d5df826c6051e65f995e57d6817d).",
          "is_evidence": 0
        },
        {
          "sent":"The malicious LNK used in the recent spearphishing campaign, ds7002.lnk (MD5: 6ed0020b0851fb71d5b0076f4ee95f3c), has technical overlaps with a suspected APT29 LNK from November 2016, 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk(MD5: f713d5df826c6051e65f995e57d6817d), which was publicly reported by Volexity.",
          "is_evidence": 0
        },
        {
          "sent": "The phishing emails were made to look like secure communication from a Public Affairs official at the U.S. Department of State, hosted on a page made to look like another Department of State Public Affairs official's personal drive, and used a legitimate Department of State form as a decoy.",
          "is_evidence": 0
        },
        {
          "sent": "The threat actor crafted the phishing emails to masquerade as a U.S. Department of State Public Affairs official sharing an official document.",
          "is_evidence": 0
        },
        {
          "sent": "There are several similarities and technical overlaps between the 14 November 2018, phishing campaign and the suspected APT29 phishing campaign on 9 November 2016, both of which occurred shortly after U.S. elections.",
          "is_evidence": 0
        }
      ]
    },
    {
      "link": "https://www.recordedfuture.com/blog/solarwinds-attribution/",
      "content": "Based on our analysis, we believe the actor behind this campaign is exceptionally focused and patient, even when compared with other state-sponsored campaigns; demonstrates an intricate knowledge of modern information technology practices, architecture, and supply chains; is experienced in a wide variety of attacker techniques; and is very familiar with security researcher techniques and approaches. For example, evidence of both APT28 and APT29 were found on Democratic National Committee servers breached in 2016. One possibility which is frequently mentioned is APT41, which is attributed to China according to the September 2020 U.S. Department of Justice indictments of seven defendants, and crosses between state-associated espionage and cybercrime. The recent expansive intrusion campaign of over half a dozen government agencies and as-yet unknown other organizations through malicious backdoors in the SolarWinds Orion platform is already one of the most significant acts of cyber espionage in history. This intrusion, dubbed SUNBURST/Solorigate, appears intended for information theft and espionage rather than destruction, placing this campaign within the realm of counterintelligence, not just incident response. While we expect these organizations have far more insight into the nature of the breach, as well as classified sources of intelligence information, calls for strong response should include publicly disclosed information to support accusations.",
      "domain": "www.recordedfuture.com",
      "tokenized": [
        {
          "sent":"Based on our analysis, we believe the actor behind this campaign is exceptionally focused and patient, even when compared with other state-sponsored campaigns; demonstrates an intricate knowledge of modern information technology practices, architecture, and supply chains; is experienced in a wide variety of attacker techniques; and is very familiar with security researcher techniques and approaches.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"For example, evidence of both APT28 and APT29 were found on Democratic National Committee servers breached in 2016.",
          "is_evidence": 0
        },
        {
          "sent": "One possibility which is frequently mentioned is APT41, which is attributed to China according to the September 2020 U.S. Department of Justice indictments of seven defendants, and crosses between state-associated espionage and cybercrime.",
          "is_evidence": 0
        },
        {
          "sent":"The recent expansive intrusion campaign of over half a dozen government agencies and as-yet unknown other organizations through malicious backdoors in the SolarWinds Orion platform is already one of the most significant acts of cyber espionage in history.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent": "This intrusion, dubbed SUNBURST/Solorigate, appears intended for information theft and espionage rather than destruction, placing this campaign within the realm of counterintelligence, not just incident response.",
          "is_evidence": 0
        },
        {
          "sent":  "While we expect these organizations have far more insight into the nature of the breach, as well as classified sources of intelligence information, calls for strong response should include publicly disclosed information to support accusations.",
          "is_evidence": 0
        }
      ]
    }
  ]
}