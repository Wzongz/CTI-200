{
  "event_id": "065",
  "claim": "Heavy Shadows: Summary of Recent Attack Techniques Used by Donot Group.",
  "original_label": "true",
  "label": "true",
  "explain": "Donot group, also known as APT-Q-38 within QiAnXin, is believed to have a government background in a South Asian country. This group mainly conducts network espionage activities against government agencies, defense military departments, and important figures in the business field. Victims include China, Pakistan, Sri Lanka, and other South Asian countries. During the daily threat hunting process, the RedDrip Team of QiAnXin Threat Intelligence Center discovered that Donot's attack activities have maintained a high frequency since the end of last year, and this trend has continued until this year. At the end of January this year, we also captured attack samples [1] by this group using documents related to the Kashmir region as bait.After combing through the recent Donot samples we captured, we found that the group 's main attack process still maintains its usual style, but attackers are also trying different malicious code implantation methods and changing the code details of attack components. Therefore, this article will provide a brief summary of Donot's recent attack techniques. The Donot group often executes shellcode to download subsequent DLL components by carrying macros in documents. These DLLs can further download malicious components such as Trojan plugin managers and Trojan plugins. In attack samples using documents related to the Kashmir region as bait, attackers deliver downloader DLL components directly through self-extracting RAR archives. Additionally, in some attack campaigns, the Donot group also uses EXE components, which are released directly from compressed packages through macro documents, to download subsequent components.From the above, it is seen that the xls and docx class documents have the same creation time respectively, indicating that these attack samples may be generated based on the same original documents.Take the above sample (MD5: d98e2d7c8e91a9d8e87abe744f6d43f9) as an example for analysis VBA code uses a mixed case name generated with the letters ijl to obfuscate variable and function names. NtAllocateVirtualMemory is called to allocate memory. The encoded shellcode is decoded using the WideCharToMultiByte function according to the character encoding used in the document, and then the EnumUILanguages function is called to execute the shellcode. The specific shellcode executed depends on the system architecture.In the case of the 64-bit version of the shellcode, self-decryption is performed by taking the byte inverse and then XOR. APIs are imported using hash, and XOR with 0xBAADC0D3 is performed during import. The URLDownloadToCacheFileA function of the urlmon.dll module is called to download the payload, with the following URLs: The downloaded payload is loaded into memory in the same way as reading a file. The decryption operation is also performed by taking the byte inverse and then XOR, and the first byte of the decrypted data is checked for verification. If the verification passes, the decrypted data is executed. The first thing to do with the obtained second-stage shellcode is to self-decrypt by XORing the bytes, and then importing the relevant APIs. Wow64DisableWow64FsRedirection is called to disable file system redirection. GetLocalTime is used to obtain the system time. If the current time is greater than the hard-coded date, the shellcode ends its operation. As shown in the figure below, the hard-coded date is 0x7e70214, which can be decomposed into 0x07e7-0x02-0x14, and converted to decimal is 2023-02-20. Each antivirus driver file is checked in turn to see if it exists in the “C:\\Windows\\System32\\drivers” directory. If a certain antivirus driver exists, the value of the corresponding flag variable is determined based on whether the current date is greater than the corresponding built-in time data: if it is not later than the time data, it is assigned a value of 1, otherwise it is assigned a value of 2. If there is no antivirus software, URLDownloadToFileA is called to download the follow-up payload, which is saved as the Unincored.dll file in the current user's temp directory, i.e. “%tmp%\\Unincored.dll”. The URL for the follow-up is: Open the download file and modify the first 4 bytes to “4D 5A 90 00” in order to fix the PE file header. Load the DLL with LoadLibraryA and obtain the address of the specified exported function (tripoliro) with GetProcAddress, and then call the exported function. In the presence of anti-virus software, if the corresponding flag variable is 2, the shellcode will be terminated by executing the int3 interrupt or other instructions to trigger an interrupt or exception. If the flag variable is 1, the execution of the shellcode corresponding to some anti-virus software is consistent with that when there is no anti-virus software; however, when other anti-virus software is present, current shellcode will load bcrypt.dll and copy the subsequent shellcode into the memory mapped by bcrypt.dll for execution. The 32-bit version of the shellcode launched by macro code is basically the same as the 64-bit version, but the URLs for downloading subsequent shellcode and DLL payloads are different. The self-extracting file is disguised with a folder icon. After running, it is released in the temp directory. The export function of the DLL component is executed through rundll32.exe, and the folder “Kashmir” containing the compressed PDF bait document is opened. The DLL component used by the Donot group is mostly the classic three-step process of “downloader-plugin manager-plugin”, but there are also cases where the DLL component first implanted is a plugin downloader. Taking the DLL component attack process implanted by the SFX sample as an example for analysis. The DLL information used by the downloader is as follows: The downloader DLL generally has two exported functions: one exported function starts another exported function by setting a scheduled task, while the other exported function reports the collected host information to the C2 server, downloads and executes the DLL component as a plugin manager. The SFX file calls the export function StTskloipy of dn2272iosUp.dll. This function writes the current DLL file path encrypted by AES into “C:\\Users[user]\\AppData\\Local\\windin.txt”. If this DLL does not exist in the temp directory of the current user, it will be copied to the temp directory. Then, another exported function, SDtuiopnhukm, is called by setting a scheduled task through the COM interface. In addition to directly calling the COM interface, the Donot group has also used the method of releasing and executing bat files in other downloader DLLs to set scheduled tasks. The released bat file runs the schtasks command and deletes the bat file after completion. The other exported function SDtuiopnhukm of downloader dn2272iosUp.dll first creates a mutex “olgui1Pigg” to ensure single instance operation, and creates the “C:\\Users[user]\\AppData\\Local\\Nsget” directory. It collects software information installed on the local machine through the registry. It obtains the current username, computer name, and CPU identifier information through the cpuid instruction, and combines these three to form a victim ID. The victim ID is concatenated with the collected software information and ending identifier “|||S4”, and the resulting string is encrypted with AES and encoded with Base64. The encrypted data is sent to the C2 server as the “batac” parameter of a POST request. The URL for sending information back is as follows: If the C2 server responds, it requests to download the subsequent component WingMndre.dll. The name of the victim ID and the subsequent component are concatenated, encrypted, and sent as the “data” parameter of a POST request. The URL for downloading the subsequent DLL is as follows: If the download is successful, WingMndre.dll is saved in the Nsget directory created earlier. The windin.txt file released by the export function StTskloipy is deleted, and a scheduled task is set to call the export function “StConectert” of WingMndre.dll. Because this scheduled task has the same name as the one set when the export function SDtuiopnhukm (“OneDriveUpdaton”), the original task's execution content is effectively modified.A Uwn.txt file is released in the Nsget directory, its content is AES-encrypted victim ID. Then, the following formatted string is called through CreateProcessW to delete the current DLL file on the disk.The subsequent component WingMndre.dll functions works as a plugin manager, with the following basic information.The main part of the function sub_100112D0 called by the export function StConectert is a while loop. At the beginning of each iteration, it sends the victim ID as a beacon message to the C2 server. The victim ID is obtained from the file Uwn.txt under the Nsget directory, which is regenerated if the file does not exist. It is noteworthy that the AES key and IV used by the plugin manager to decrypt the content of Uwn.txt are the same as those used by the downloader component, while a different set of AES key and IV is used to encrypt the victim ID when sending the beacon message. The URL for sending the beacon message is:If a response message is received from the C2 server, the next step is executed; otherwise, it sleeps for 30 seconds and proceeds to the next iteration. The response message is separated by “|” and each part represents a specific operation for a plugin component (including the plugin manager itself). A captured response message is shown below:The format is similar to Donot's previous attack activity [2], but this time the response message is not saved as a disk file but is processed directly in memory. Each part separated by “|” is parsed and distributed to the function sub_1000FCA0 for further processing. The specific information in each part is separated by “>” and the meanings of the first four elements are as follows:The downloaded plugin components are saved in the directory “C:\\Users[user]\\AppData\\Local\\Nsget\\Updates”. The URLs for subsequent components are as follows:The command code is converted from a string to an integer using stoi and then dispatched.When updating the plugin manager, the released alex.bat is also under the Updates directory, and its content is as follows. This bat script copies the new plugin manager to the parentl directory of Updates, i.e. Nsget, deletes the original file, and deletes the scheduled task named “Windows”.Next, set up a scheduled task named “Windows” to execute the released alex.bat. Then set up another scheduled task named “WindowsMainHawk” to execute the export function StConectert of the new plugin manager. After the old plugin manager exits the while loop, just like the downloader DLL, it will perform a self-deletion operation. Function sub_1000A960 calls CreateProcessA to execute the following formatted string command.We captured a plugin named SSrtuioUpd.dll from WingMndre.dll, with the following basic information.The function of this plugin is taking screenshot and uploading, and the main logic is implemented in function sub_10006D10, with the main code as follows.Taking screenshot is accomplished by simulating the press of the printscreen key. The captured screen image is saved in the created directory “C:\\Users[user]\\AppData\\Local\\Nsget\\srt”, named with a generated GUID. The screen capture data is first saved directly to the disk with the jpg extension, and then encrypted to obtain a file with the same name but with upr extension. The original jpg file is then deleted. Then the upr file data in the srt directory is transmitted back to the C2 server, with the following URL for transmission: During the sample association process, we discovered a simpler plugin downloader DLL component, which is implanted by macro documents and shellcode. The sample information is as follows. The functions of the above two samples are consistent, so we will use the 32-bit version as an example to illustrate. The export function Rfvgyrty copies the sample itself to the created directory “C:\\Users[user]\\AppData\\Local\\Logo” with the name difg02rf.dll. A scheduled task is created to call another exported function of the copied DLL, rgbrgbbgr. The other exported function rgbrgbbgr will sequentially check whether the three plugins Kyingert.dll, tr2201dcv.dll, and SSrtfgad.dll exist in the plugin storage directory “C:\\ProgramData\\Winstom\\Dnt”. If they do not exist, they will be downloaded from the C2 server, and then the St function of the plugin DLL is called to start the plugin. The URL to obtain the plugins is as follows:Donot also uses the EXE component as a downloader to obtain the follow-up components in the attack activity. The information of related samples that have recently appeared is as follows.The VBA code in Macro Document 1 (MD5: 171c011571f94ea2f5c928bdf5d560dc) is heavily annotated. After organizing the code, it can be seen that the sample first releases pkhfg.bat, which is used to create three scheduled tasks to prepare for the execution of subsequent components. Then, it calls the gtru_fdtr function to release the dfer.cab file. Next, it releases the tbreah.bat file, which is responsible for extracting the downloader component dfer.exe from the dfer.cab file. This bat file is executed through the “fghru” scheduled task created above and deletes the task after execution. The VBA code in Macro Documents 2 and 3 is similar. Therefore, Macro Document 2 (MD5: 79cff3bc3cbe51e1b3fecd131b949930) is used as an example to illustrate. Unlike the sample mentioned above, the execution timing of the macro code has changed from “Open” to “BeforeClose.” Scheduled tasks are created directly by calling the Schedule.Service interface, and no longer by releasing bat files. After releasing the compressed file djkd.zip, it is directly decompressed the zip file in the code, and the decompressed file is renamed to the name mnvc.exe set in the scheduled task earlier. It is speculated that the attacker is trying to evade anti-virus software's scanning of the decompressed file by changing the file extension in this way.The code of the three EXE components released by the macro documents is basically the same, with simple functionality. Their role is to download two subsequent components from C2 and control the order of downloading components through a global variable with an initial value of 1. The bat file corresponds to the file path set by the VBA code above for setting up scheduled tasks. The main code is shown below. The information about the EXE components involved in the above macro documents is organized as follows. Unfortunately, we did not obtain the subsequent attack samples of the above attack. The EXE component attack activity is consistent with the Donot activity disclosed by other security vendors [3]. Since last year Donot implanted malware using the method of releasing compressed packages through macro documents and has been using EXE components in this implantation process since at least September 2022.Donot frequently uses various encryption methods to encrypt critical strings in PE-based attack components. In addition to simple addition or subtraction of fixed numerical values and single 01 transformations, we found that DLL components that have recently appeared often use double 01 transformations and custom multi-layer encryption to hide critical strings. Besides, attackers use two encryption methods to process different strings sometimes.In this type of encryption method, the ASCII code of the string is converted into binary and exists in the sample in the form of a 01 string. If this conversion is only performed once, it is a single 01 transformation. In the Donot sample that appeared at the end of 2022, double 01 transformations began to appear. The 01 string obtained after one round of transformation is transformed in the same way again, which means that each character of the original string needs to be represented by a 01 string with a length of 64 characters.In samples that use this type of encryption method, when restoring the original string, the decrypted data is decoded in base64 and decrypted in AES. Then, the decrypted data is processed in the following order: (1) subtracting 1 byte by byte, (2) swapping the positions of every two adjacent bytes, and (3) reversing the string. Overall, the attack techniques of the Donot group are relatively fixed, and a commonly used tactics in their attack chain is linking sequential components with scheduled tasks. However, the group is also expanding its attack process, with more diverse methods of implanting malicious components and using various types of components. Although there have been no reports of related attacks affecting domestic users, QiAnXin's RedDrip Team would like to remind all users not to open links of unknown origin shared on social media, click on unknown email attachments, run unknown files with exaggerated titles, or install apps from non-official sources. It is also important to regularly back up important files and update software patches. If there is a need to install an app of unknown origin, it can be first analyzed through QiAnXin Threat Intelligence Center's deep analysis platform (https://sandbox.ti.qianxin.com/sandbox/page). Currently, the deep analysis platform supports the analysis of various file formats, including those for Windows and Android platforms. Currently, all QiAnXin products based on threat intelligence data from QiAnXin Threat Intelligence Center, including TIP, Tianqing, Tianyan Advanced Threat Detection System, QiAnXin NGSOC, and QiAnXin Situational Awareness, have supported precise detection of such attacks.\n\n\n",
  "reports": [
    {
      "link": "https://thehackernews.com/2023/10/donot-teams-new-firebird-backdoor-hits.html/",
      "content": "Codenamed Mysterious Elephant (aka APT-K-47), the hacking group has been attributed to a spear-phishing campaign that drops a novel backdoor called ORPCBackdoor that's capable of executing files and commands on the victim's computer, and receive files or commands from a malicious server. DoNot Team, also known by the names APT-C-35, Origami Elephant, and SECTOR02, is suspected to be of Indian origin, with its attacks employing spear-phishing emails and rogue Android apps to propagate malware. In a sign that the hacking crew has also set its eyes on Linux systems, Zscaler said it identified a small set of desktop entry files that pave the way for the execution of Python-based ELF binaries, including GLOBSHELL for file exfiltration and PYSHELLFOX for stealing session data from the Mozilla Firefox browser. The disclosure also follows Zscaler ThreatLabz's uncovering of new malicious activity carried out by the Pakistan-based Transparent Tribe (aka APT36) actor targeting Indian government sectors using an updated malware arsenal that comprises a previously undocumented Windows trojan dubbed ElizaRAT. The latest assessment from Kaspersky builds on an analysis of the threat actor's twin attack sequences in April 2023 to deploy the Agent K11 and RTY frameworks. The threat actor known as DoNot Team has been linked to the use of a novel .NET-based backdoor called Firebird targeting a handful of victims in Pakistan and Afghanistan.",
      "domain": "thehackernews.com",
      "tokenized": [
        {
          "sent":"Codenamed Mysterious Elephant (aka APT-K-47), the hacking group has been attributed to a spear-phishing campaign that drops a novel backdoor called ORPCBackdoor that's capable of executing files and commands on the victim's computer, and receive files or commands from a malicious server.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"DoNot Team, also known by the names APT-C-35, Origami Elephant, and SECTOR02, is suspected to be of Indian origin, with its attacks employing spear-phishing emails and rogue Android apps to propagate malware.",
          "is_evidence": 0
        },
        {
          "sent":"In a sign that the hacking crew has also set its eyes on Linux systems, Zscaler said it identified a small set of desktop entry files that pave the way for the execution of Python-based ELF binaries, including GLOBSHELL for file exfiltration and PYSHELLFOX for stealing session data from the Mozilla Firefox browser.",
          "is_evidence": 0
        },
        {
          "sent":"The disclosure also follows Zscaler ThreatLabz's uncovering of new malicious activity carried out by the Pakistan-based Transparent Tribe (aka APT36) actor targeting Indian government sectors using an updated malware arsenal that comprises a previously undocumented Windows trojan dubbed ElizaRAT.",
          "is_evidence": 0
        },
        {
          "sent":"The latest assessment from Kaspersky builds on an analysis of the threat actor's twin attack sequences in April 2023 to deploy the Agent K11 and RTY frameworks.",
          "is_evidence": 0
        },
        {
          "sent": "The threat actor known as DoNot Team has been linked to the use of a novel .NET-based backdoor called Firebird targeting a handful of victims in Pakistan and Afghanistan.",
          "is_evidence": 0
        }
      ]
    },
    {
      "link": "https://www.welivesecurity.com/2022/01/18/donot-go-do-not-respawn/",
      "content": "According to our telemetry, Donot Team focuses on a small number of targets in South Asia – Bangladesh, Sri Lanka, Pakistan and Nepal – as seen in Figure 1.These attacks are focused on: Going as far as targeting embassies of these countries in other regions, such as the Middle East, Europe, North America, and Latin America, is also not outside Donot Team’s realm. An overview of this attack chain and its malware components is shown in Figure 17.The components were coded in Go, and C++ (with MinGW and Visual Studio compilers). Donot Team (also known as APT-C-35 and SectorE02) is a threat actor operating since at least 2016 and known for targeting organizations and individuals in South Asia with Windows and Android malware. For each of the variants, we analyze the whole attack chain and provide insight into how the group updates its tools, tactics, and techniques. The campaigns of Donot Team are motivated by espionage, using their signature malware: the “yty” malware framework, whose main purpose is to collect and exfiltrate data. We have been closely following the activities of Donot Team, and have traced several campaigns that leverage Windows malware derived from the group’s signature yty malware framework.",
      "domain": "www.welivesecurity.com",
      "tokenized": [
        {
          "sent":"According to our telemetry, Donot Team focuses on a small number of targets in South Asia – Bangladesh, Sri Lanka, Pakistan and Nepal – as seen in Figure 1.These attacks are focused on: Going as far as targeting embassies of these countries in other regions, such as the Middle East, Europe, North America, and Latin America, is also not outside Donot Team’s realm.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent": "An overview of this attack chain and its malware components is shown in Figure 17.The components were coded in Go, and C++ (with MinGW and Visual Studio compilers).",
          "is_evidence": 0
        },
        {
          "sent":"Donot Team (also known as APT-C-35 and SectorE02) is a threat actor operating since at least 2016 and known for targeting organizations and individuals in South Asia with Windows and Android malware.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"For each of the variants, we analyze the whole attack chain and provide insight into how the group updates its tools, tactics, and techniques.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"The campaigns of Donot Team are motivated by espionage, using their signature malware: the “yty” malware framework, whose main purpose is to collect and exfiltrate data.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent": "We have been closely following the activities of Donot Team, and have traced several campaigns that leverage Windows malware derived from the group’s signature yty malware framework.",
          "is_evidence": 1,
          "is_repeat": 0
        }
      ]
    },
    {
      "link": "https://www.zdnet.com/article/donot-team-apt-will-strike-govt-targets-for-years-until-they-succeed/",
      "content": "\"In some cases, this is achieved through the deployment of a stealthier backdoor that remains quiet until the attackers need it; in other cases, they simply restart their operation with new malware or a variant of the malware they used previously. Active since at least 2016, Donot Team tends to focus on a small number of targets in Asian countries including Bangladesh, Sri Lanka, Pakistan, and Nepal. Donot Team group members leverage a custom \"yty\" malware framework in attacks. Researchers have exposed the inner workings of Donot Team, a threat group that will strike the same targets for years if that's what it takes to succeed. This malware variant downloads components to maintain persistence – such as through scheduled tasks – and also contains reverse shell capabilities, screenshot functionality, and is able to collect and steal files. While the advanced persistent threat (APT) group tends to stay within this geographical area, Donot Team has also been traced to attacks against embassies in the Middle East, Latin America, North America, and Europe.",
      "domain": "www.zdnet.com",
      "tokenized": [
        {
          "sent": "\"In some cases, this is achieved through the deployment of a stealthier backdoor that remains quiet until the attackers need it; in other cases, they simply restart their operation with new malware or a variant of the malware they used previously.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"Active since at least 2016, Donot Team tends to focus on a small number of targets in Asian countries including Bangladesh, Sri Lanka, Pakistan, and Nepal.",
          "is_evidence": 0
        },
        {
          "sent":"Donot Team group members leverage a custom \"yty\" malware framework in attacks.",
          "is_evidence": 0
        },
        {
          "sent": "Researchers have exposed the inner workings of Donot Team, a threat group that will strike the same targets for years if that's what it takes to succeed.",
          "is_evidence": 0
        },
        {
          "sent": "This malware variant downloads components to maintain persistence – such as through scheduled tasks – and also contains reverse shell capabilities, screenshot functionality, and is able to collect and steal files.",
          "is_evidence": 0
        },
        {
          "sent": "While the advanced persistent threat (APT) group tends to stay within this geographical area, Donot Team has also been traced to attacks against embassies in the Middle East, Latin America, North America, and Europe.",
          "is_evidence": 0
        }
      ]
    },
    {
      "link": "https://www.cyfirma.com/outofband/donot-apt-targets-individuals-in-south-asia-using-android-malware/",
      "content": "Analysis of the samples links this attack with DoNot APT, historically very active in the region. DoNot APT Targets Individuals in South Asia using Android Malware Recently CYFIRMA observed a cyber-attack on an individual residing in Kashmir, India. Overall, our technical analysis points to the DoNot APT as the perpetrator of this attack, which is consistent with their past targeting of entities in the Kashmir region of India. The threat actor is active since 2016 and has been carrying out cyber strikes in the South Asian region. The threat actor is known for their consistent attacks and the same was reflected, when we observed two different apps in the victim’s mobile with different command and control servers, belonging to DoNot APT.The attack is not surprising to the threat intelligence community, as DoNot has previously targeted NGOs and other entities in the Kashmir area, as well as other regions of India, Bangladesh, and Pakistan on multiple occasions. Their attack is not so sophisticated and the aim behind the attack is still unknown.",
      "domain": "www.cyfirma.com",
      "tokenized": [
        {
          "sent":"Analysis of the samples links this attack with DoNot APT, historically very active in the region.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent":"DoNot APT Targets Individuals in South Asia using Android Malware Recently CYFIRMA observed a cyber-attack on an individual residing in Kashmir, India.",
          "is_evidence": 0
        },
        {
          "sent":"Overall, our technical analysis points to the DoNot APT as the perpetrator of this attack, which is consistent with their past targeting of entities in the Kashmir region of India.",
          "is_evidence": 0
        },
        {
          "sent": "The threat actor is active since 2016 and has been carrying out cyber strikes in the South Asian region.",
          "is_evidence": 1,
          "is_repeat": 0
        },
        {
          "sent": "The threat actor is known for their consistent attacks and the same was reflected, when we observed two different apps in the victim’s mobile with different command and control servers, belonging to DoNot APT.The attack is not surprising to the threat intelligence community, as DoNot has previously targeted NGOs and other entities in the Kashmir area, as well as other regions of India, Bangladesh, and Pakistan on multiple occasions.",
          "is_evidence": 0
        },
        {
          "sent": "Their attack is not so sophisticated and the aim behind the attack is still unknown.",
          "is_evidence": 0
        }
      ]
    }
  ]
}