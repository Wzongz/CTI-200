{
    "event_id": "019",
    "claim": "The gaming industry in Asia has been targeted by attackers who compromise game developers to insert backdoors into games' build environments, leading to malware distribution disguised as legitimate software, highlighting a significant cybersecurity threat in the digital gaming sector.",
    "original_label": "true",
    "label": "true",
    "explain": "This is not the first time the gaming industry has been targeted by attackers who compromise game developers, insert backdoors into a game’s build environment, and then have their malware distributed as legitimate software. In April 2013, Kaspersky Lab reported that a popular game was altered to include a backdoor in 2011. That attack was attributed to perpetrators Kaspersky called the Winnti Group. Yet again, new supply-chain attacks recently caught the attention of ESET Researchers. This time, two games and one gaming platform application were compromised to include a backdoor. Given that these attacks were mostly targeted against Asia and the gaming industry, it shouldn’t be surprising they are the work of the group described in Kaspersky’s “Winnti – More than just a game”. Although the malware uses different configurations in each case, the three affected software products included the same backdoor code and were launched using the same mechanism. While two of the compromised products no longer include the backdoor, one of the affected developers is still distributing the trojanized version: ironically, the game is named Infestation, and is produced by Thai developer Electronics Extreme. We have tried informing them several times, through various channels, since early February, but without apparent success. Let’s look at how the malicious payload is embedded and then look into the details of the backdoor itself. The payload code is started very early during the execution of the backdoored executable file. Right after the PE entry point, the standard call to the C Runtime initialization (__scrt_common_main_seh in Figure 1) is hooked to launch the malicious payload before everything else (Figure 2). This may suggest that the malefactor changed a build configuration rather than the source code itself. The code added to the executable decrypts and launches the backdoor in-memory before resuming normal execution of the C Runtime initialization code and all the subsequent code of the host application. The embedded payload data has a specific structure, seen in Figure 3, that is parsed by the added unpacking code. It includes an RC4 key (which is XORed with 0x37) that is used to decrypt a filename and the embedded DLL file. The actual malicious payload is quite small and only contains about 17 KB of code and data. Illustrated in Figure 4, the configuration data is simply a whitespace-separated list of strings. The configuration consists of four fields: ESET researchers have identified five versions of the payload: In the first three variants, the code was not recompiled, but the configuration data was edited in the DLL file itself. The rest of the content is a byte for byte copy. Domain names were carefully chosen to look like they are related to the game or application publisher. The apex domain was set to redirect to a relevant legitimate site using the Namecheap redirection service, while the subdomain points to the malicious C&C server. A bot identifier is generated from the machine’s MAC address. The backdoor reports information about the machine such as the user name, computer name, Windows version and system language to the C&C server and awaits commands. The data is XOR encrypted with the key “*&b0i0rong2Y7un1” and base64-encoded. The data received from the C&C server is encrypted using the same key. This simple backdoor has only four commands that can be used by the attacker: The commands are pretty much self-explanatory. They allow the attacker to run additional executables from a given URL. The last one is perhaps less obvious. The UnInstall command doesn’t remove the malware from the system. After all, it is embedded inside a legitimate executable that still needs to run. Rather than removing anything, it disables the malicious code by setting the following registry value to 1: When the payload is started, the registry value is queried and execution is aborted if set. Perhaps the attackers are trying to reduce the load from their C&C servers by avoiding callbacks from uninteresting victims. Based on ESET telemetry, one of the second stage payload delivered to victims is Win64/Winnti.BN. As far as we can tell, its dropper was downloaded over HTTPS from api.goallbandungtravel[.]com. We have seen it installed as a Windows service and as a DLL in C:\\Windows\\System32 using the following file names: The samples we have analyzed were actually quite large, each of them about 60 MB. This is, however, only for appearance because the real size or the PE file is between 63 KB and 72 KB, depending on the version. The malware files simply have lots of clean files appended to them. This is probably done by the component that drops and installs this malicious service. Once the service runs, it appends the extension .mui to its DLL path, reads that file and decrypts it using RC5. The decrypted MUI file contains position-independent code at offset 0. The RC5 key is derived from the hard drive serial number and the string “f@Ukd!rCto R$.” — we were not able to obtain any MUI files nor the code that installs them in the first place. Thus, we do not know the exact purpose of this malicious service. Recent versions of the malware include an “auto-update” mechanism, using C&C server http://checkin.travelsanignacio[.]com. That C&C server served the latest version of the MUI files encrypted with a static RC5 key. The C&C server was not responding during our analysis. Let’s start with who is not targeted. Early in the payload, the malware checks to see if the system language is Russian or Chinese (Figure 5). In either case, the malware stops running. There is no way around this: the attackers are simply not interested in computers configured with those languages. ESET telemetry shows victims are mostly located in Asia, with Thailand having the largest part of the pie. Given the popularity of the compromised application that is still being distributed by its developer, it wouldn’t be surprising if the number of victims is in the tens or hundreds of thousands. Supply-chain attacks are hard to detect from the consumer perspective. It is impossible to start analyzing every piece of software we run, especially with all the regular updates we are encouraged or required to install. So, we put our trust in software vendors that the files they distribute don’t include malware. Perhaps that’s the reason multiple groups target software developers: compromising the vendor results in a botnet as popular as the software that is hacked. However, there is a downside of using such a technique: once the scheme is uncovered, the attacker loses control and computers can be cleaned through regular updates. We do not know the motives of the attackers at this point. Is it simply financial gain? Are there any reasons why the three affected products are from Asian developers and for the Asian market? Do these attackers use a botnet as part of a larger espionage operation? ESET products detect this threat as Win32/HackedApp.Winnti.A, Win32/HackedApp.Winnti.B, the payload as Win32/Winnti.AG, and the second stage as Win64/Winnti.BN.\n\n\n",
    "reports": [
        {
            "link": "https://securelist.com/operation-shadowhammer/89992/",
            "content":   "A victim distribution by country for the compromised ASUS Live Updater looks as follows: It should be noted that the numbers are also highly influenced by the distribution of Kaspersky users around the world. Based on our statistics, over 57,000 Kaspersky users have downloaded and installed the backdoored version of ASUS Live Update at some point in time. In January 2019, we discovered a sophisticated supply chain attack involving the ASUS Live Update Utility. To achieve this, the attackers had hardcoded a list of MAC addresses in the trojanized samples and this list was used to identify the actual intended targets of this massive operation. We believe this to be a very sophisticated supply chain attack, which matches or even surpasses the Shadowpad and the CCleaner incidents in complexity and techniques. We have contacted ASUS and informed them about the attack on Jan 31, 2019, supporting their investigation with IOCs and descriptions of the malware.",
            "domain": "securelist.com",
            "tokenized": [
                {
                    "sent":   "A victim distribution by country for the compromised ASUS Live Updater looks as follows: It should be noted that the numbers are also highly influenced by the distribution of Kaspersky users around the world.",
                    "is_evidence": 1,
                    "is_repeat": 0
                },
                {
                    "sent":  "Based on our statistics, over 57,000 Kaspersky users have downloaded and installed the backdoored version of ASUS Live Update at some point in time.",
                    "is_evidence": 0
                },
                {
                    "sent":   "In January 2019, we discovered a sophisticated supply chain attack involving the ASUS Live Update Utility.",
                    "is_evidence": 0
                },
                {
                    "sent":  "To achieve this, the attackers had hardcoded a list of MAC addresses in the trojanized samples and this list was used to identify the actual intended targets of this massive operation.",
                    "is_evidence": 0
                },
                {
                    "sent":  "We believe this to be a very sophisticated supply chain attack, which matches or even surpasses the Shadowpad and the CCleaner incidents in complexity and techniques.",
                    "is_evidence": 0
                },
                {
                    "sent":   "We have contacted ASUS and informed them about the attack on Jan 31, 2019, supporting their investigation with IOCs and descriptions of the malware.",
                     "is_evidence": 0
                }
            ]
        },
        {
            "link": "https://st.drweb.com/static/new-www/news/2020/october/Study_of_the_ShadowPad_APT_backdoor_and_its_relation_to_PlugX_en.pdf/",
            "content": "During the investigation, Doctor Web specialists analyzed and described several groups of trojan programs, including new samples of trojan families already encountered by our virus analysts, as well as previously unknown trojans. In both cases, the attackers used a similar selection of malware, including the same specialized backdoors that infected domain controllers in the attacked organizations. It is a multi-module backdoor written in C/C++ and Assembler and designed to run on 32-bit and 64-bit Microsoft Windows operating systems. The analysis showed that certain PlugX modifications used the same domain names of C&C servers, as did other backdoors related to targeted attacks on Central Asian state institutions. The backdoor’s DLL library is loaded into RAM by DLL Hijacking using the genuine executable file TosBtKbd.exe from TOSHIBA CORPORATION. Various modifications of this malware family are a well-known tool of the Winnti APT group, presumably of Chinese origin, active since at least 2012.",
            "domain": "st.drweb.com",
            "tokenized": [
                {
                    "sent":  "During the investigation, Doctor Web specialists analyzed and described several groups of trojan programs, including new samples of trojan families already encountered by our virus analysts, as well as previously unknown trojans.",
                    "is_evidence": 1,
                    "is_repeat": 0
                },
                {
                    "sent":  "In both cases, the attackers used a similar selection of malware, including the same specialized backdoors that infected domain controllers in the attacked organizations.",
                    "is_evidence": 0
                },
                {
                    "sent":  "It is a multi-module backdoor written in C/C++ and Assembler and designed to run on 32-bit and 64-bit Microsoft Windows operating systems.",
                    "is_evidence": 1,
                    "is_repeat": 0
                },
                {
                    "sent":    "The analysis showed that certain PlugX modifications used the same domain names of C&C servers, as did other backdoors related to targeted attacks on Central Asian state institutions.",
                    "is_evidence": 1,
                    "is_repeat": 0
                },
                {
                    "sent":   "The backdoor’s DLL library is loaded into RAM by DLL Hijacking using the genuine executable file TosBtKbd.exe from TOSHIBA CORPORATION.",
                    "is_evidence": 1,
                    "is_repeat": 0
                },
                {
                    "sent":  "Various modifications of this malware family are a well-known tool of the Winnti APT group, presumably of Chinese origin, active since at least 2012.",
                    "is_evidence": 1,
                    "is_repeat": 0
                }
            ]
        },
        {
            "link": "https://quointelligence.eu/2020/04/winnti-group-insights-from-the-past/",
            "content": "As multiple researchers have reported, Winnti operators embed the name of their target directly into the malware, but in an obfuscated manner. In the latest Winnti Group public report, FireEye researchers reported of a new widespread campaign attributed to APT41 which involves exploitation attempts of recently disclosed and patched vulnerabilities for products of Cisco, Citrix, and Zoho. Notably, various operations attributed to other China-linked threat actor groups, such as APT17 and Ke3chang, have also leveraged its backdoor malware. On 21 February, we detected the new submission of a 64-bit Winnti executable to a public online malware scanning service. The Winnti Group has exhibited their ability to breach different organizations and conduct sophisticated attack operations, typically motivated by espionage and financial gain, with various TTPs and malware toolkits. While it is a known TTP that Winnti attributed attacks have involved stolen digital certificates for code signing its malware components, the use of this certificate is not publicly discussed, except for a brief report from a security researcher apparently associated with a Vietnamese security company.",
            "domain": "quointelligence.eu",
            "tokenized": [
                {
                    "sent": "As multiple researchers have reported, Winnti operators embed the name of their target directly into the malware, but in an obfuscated manner.",
                    "is_evidence": 1,
                    "is_repeat": 0
                },
                {
                    "sent": "In the latest Winnti Group public report, FireEye researchers reported of a new widespread campaign attributed to APT41 which involves exploitation attempts of recently disclosed and patched vulnerabilities for products of Cisco, Citrix, and Zoho.",
                    "is_evidence": 0
                },
                {
                    "sent": "Notably, various operations attributed to other China-linked threat actor groups, such as APT17 and Ke3chang, have also leveraged its backdoor malware.",
                    "is_evidence": 0
                },
                {
                    "sent":  "On 21 February, we detected the new submission of a 64-bit Winnti executable to a public online malware scanning service.",
                    "is_evidence": 0
                },
                {
                    "sent": "The Winnti Group has exhibited their ability to breach different organizations and conduct sophisticated attack operations, typically motivated by espionage and financial gain, with various TTPs and malware toolkits.",
                    "is_evidence": 0
                },
                {
                    "sent":  "While it is a known TTP that Winnti attributed attacks have involved stolen digital certificates for code signing its malware components, the use of this certificate is not publicly discussed, except for a brief report from a security researcher apparently associated with a Vietnamese security company.",
                    "is_evidence": 0
                }
            ]
         },
         {
            "link": "https://documents.trendmicro.com/assets/white_papers/wp-earth-baku-an-apt-group-targeting-indo-pacific-countries.pdf/",
            "content":  "In such an attack, the malware creates install.bat, which installs StealthVector as a Windows service (Figure 6).Another method involves a China Chopper web shell that is uploaded to Microsoft Exchange Server by exploiting the ProxyLogon vulnerability CVE-2021-26855.9 We also detected StealthVector on Microsoft Exchange Server, from which we inferred that Earth Baku likely deployed China Chopper using the ProxyLogon exploit, and then uploaded StealthVector using a web shell (Figure 7). It is likely that the group is composed of threat actors who collaborate by sharing tools with diverse attack infrastructures,4 but their use of the new shellcode loaders and backdoor suggests that they have recruited members with specific areas of expertise. Its exploits have been well documented; the group has garnered a reputation for its use of advanced, self-developed tools.1. Our in-depth analysis of these newfound malware tools revealed that they have easily customizable features and are distributed through different attack vectors, making it convenient for malicious actors to tailor them to specific victims. This research paper covers the technical details of a new cyberespionage campaign that we believe can be traced back to the notorious advanced persistent threat (APT) group Earth Baku. We believe this design is meant to keep malware development simple, as the actors will not need to change its source code in order to implement these features.",
            "domain": "documents.trendmicro.com",
            "tokenized": [
                {
                    "sent":  "In such an attack, the malware creates install.bat, which installs StealthVector as a Windows service (Figure 6).Another method involves a China Chopper web shell that is uploaded to Microsoft Exchange Server by exploiting the ProxyLogon vulnerability CVE-2021-26855.9 We also detected StealthVector on Microsoft Exchange Server, from which we inferred that Earth Baku likely deployed China Chopper using the ProxyLogon exploit, and then uploaded StealthVector using a web shell (Figure 7).",
                    "is_evidence": 1,
                    "is_repeat": 0
                },
                {
                    "sent":  "It is likely that the group is composed of threat actors who collaborate by sharing tools with diverse attack infrastructures,4 but their use of the new shellcode loaders and backdoor suggests that they have recruited members with specific areas of expertise.",
                    "is_evidence": 0
                },
                {
                    "sent":  "Its exploits have been well documented; the group has garnered a reputation for its use of advanced, self-developed tools.1",
                    "is_evidence": 0
                },
                {
                    "sent": "Our in-depth analysis of these newfound malware tools revealed that they have easily customizable features and are distributed through different attack vectors, making it convenient for malicious actors to tailor them to specific victims.",
                    "is_evidence": 0
                },
                {
                    "sent":  "This research paper covers the technical details of a new cyberespionage campaign that we believe can be traced back to the notorious advanced persistent threat (APT) group Earth Baku.",
                    "is_evidence": 0
                },
                {
                    "sent": "We believe this design is meant to keep malware development simple, as the actors will not need to change its source code in order to implement these features.",
                    "is_evidence": 0
                }
            ]
        }
    ]
}