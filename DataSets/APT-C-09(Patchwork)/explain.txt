A number of security vendors reported a series of cyber-attacks involving the use of a malware family called SOCKSBOT and claimed to be associated with CANDLEFISH (a.k.a. Patchwork, Dropping Elephant). However, as disclosed in this report, research by iDefense analysts shows that SOCKSBOT was in fact used by a threat group in an 18- month-long campaign dubbed Goldfin, spoofing financial institutions in the Commonwealth of Independent States (CIS) countries since as early as February 2017 to as recently as May 2018. Based on the tactics, techniques and procedures (TTPs) observed in this campaign, iDefense assesses with moderate confidence that the reported campaign is unlikely to be associated with CANDLEFISH. In addition, iDefense analysts have identified infrastructure overlap and the shared use of a PowerShell obfuscation technique with FIN7. Although these observations are not enough to attribute the Goldfin campaign to FIN7, iDefense assesses these to be interesting and noteworthy observations that further highlights the complex relationships that exist behind-the-scene in organized cyber crime.iDefense is providing information about the reported campaigns to the general iDefense customer base, with this report being intended for security operations center (SOC) analysts and engineers. Management and executive leadership may also want to use this information.iDefense is providing this information so that customers are aware of the modus operandi of a highly active threat group that is targeting financial institutions for financial gain. SOC analysts and engineers can use this IA's detailed information pertaining to the workings of a malware family and indicators of compromise (IoCs) to contain or mitigate the discussed threat through monitoring or blocking. SOC analysts can use the information provided in the Analysis and Mitigation sections of this IA for hunting activities for systems that may have already been compromised. Analysts and security engineers can use the IoCs by adding them to hunting lists on endpoint detection and response (EDR) solutions as well as network- and host-based blacklists to detect and deny malware implantation and command-and-control (C2) communication. Intelligence analysts may want to use the information provided in this IA to better inform their own analyses. The provided information can also help inform ongoing intelligence .analyses and forensic investigations, particularly for compromise discovery, damage assessment, and attribution. Management and executive leadership may use this information to assess the risks associated with the threat described herein to make operational and policy decisions accordingly.iDefense analysts came across two spear-phishing campaigns in October 2017 involving the use of a malware family publicly known as SOCKSBOT. One campaign spoofs the Halyk Bank (Exhibit 1) and another spoofs the PrivatBank (Exhibit 2): As Exhibits 1 and 2 show, both emails contain an identical message, even down to the location of the embedded hyperlinks. The only differences are the embedded URLs and the signature of the email in order to reflect the financial institution the attackers were spoofing. This information suggests some sort of phishing kit was likely used to generate the phishing emails. An approximate translation of the e-mail spoofing Halyk Bank is as follows:Subsequent technical analysis of the infection chain involved led iDefense to uncover an 18-month long campaign of spoofing banks in CIS countries, with the most recent campaign observed on May 28, 2018 spoofing the Idea Bank CJSC：The forum member reports that two spear-phishing emails were received: one claiming to be a notification about opening an account and the other claiming to be a notification of a loan being taken out. The content of the latter email is approximately translated below:In the attacks observed, all involved a phishing email with two embedded URLs directing the user to download a file named dog.zip. Based on the content of the e-mails and the domain names, the following banks were spoofed in this campaign: It is also noteworthy that in both phishing kits, there are always two hyperlinks linking to the same malicious file: one in the body of the message and one at the end of the e-mail in a link called Договор (which translates to Contract). The next section details the infection chain that follows the initial download.Unsurprisingly, this script also contains obfuscated code. The malicious payload is compressed, Base64 encoded, and embedded within the script, which is similar to a technique used in PowerSploit. However, the observed technique appears to be a variant of PowerSploit as the encoded payload is further split into a number of chunks that are dynamically loaded into an array variable named $OArr as shown in Exhibit 8:As mentioned in the last section, the SOCKSBOT implant is typically delivered as a Base64-encoded string reflectively loaded (via the ?ReflectiveLoader@@YGKPAX@Z exported function) in a newly started svchost.exe process. As such, the implant exists only in memory and never touches the disk. The implant will first verify if any of the mutexes in the following format are present in order to not run twice: Global\%snps Global\%sstp Exhibit 10 shows an example of a created mutex.This implant will communicate with the designated C2 server by first creating a buffer and will, on first execution, communicate to the C2 server that it has successfully infected a target by using a.php URI that is pseudo-randomly generated. SOCKSBOT uses the ObtainUserAgentString API to determine the default user-agent of the machine. An example of a request to the C2 46.166.163[.]243 is shown in Exhibit 11.The C2 server or the operator of the SOCKSBOT implant can then respond with a specific HTTP status code to perform a set of actions. Exhibit 12 shows this option in the implant.SOCKSBOT can thus write other PowerShell scripts to the %TEMP% folder and execute these hidden from the user. This is achieved with the following command.This allows the attacker to upload other obfuscated PowerShell scripts on the machine and, as such, makes SOCKSBOT a powerful and persistent backdoor. Altogether, the SOCKSBOT samples observed and analyzed in this report are as follows:While the described infection chain above is the most common infection chain observed, iDefense analysts have also observed a number of different variations in related campaigns:Aside from the PowerShell reflective loader, iDefense analysts have also identified a dropper executable binary with the following properties that was used to reflectively load SOCKSBOT into a chosen process (usually svchost.exe):Note that the binary was signed with a code-signing certificate purportedly from an organization called Magnum Travel Club. This dropper will create a copy of itself in C:\Programdata\Logs as a hidden system file and will then delete the original file. Another copy will be created in %appdata%\Microsoft\Windows\Start Menu\Programs\Startup with the same properties to ensure persistence. Finally, the dropper will start a new svchost.exe process in a suspended state and consequently reflectively load (and inject) the SOCKSBOT implant into the process. An additional Windows service may be created for persistence as well, which is done by first enumerating existing legitimate services and creating a new service spoofing one of the services with an almost identical name. In this case, a new service named Xindows Error Reporting Service was created (see Exhibit 14).While this dropper does indeed load the SOCKSBOT implant, all other iterations or campaigns have used scripts, in particular JavaScript and PowerShell, to reflectively load the SOCKSBOT payload.While most dog.js samples observed were obfuscated as reported in the infection chain section, there are also versions that were not obfuscated at all or were obfuscated using a different obfuscation technique such as different character encoding (Exhibit 15): Aside from changes to the dog.js obfuscation, iDefense analysts have also found a different obfuscation technique used to obscure the code in the reflective loading script (see Exhibit 16): The sample concerned has the MD5 signature c38b06f871d2268972fa01725b59d7ed. Note also that the execution command used for persistence is again encoded (see Exhibit 17):Based on the preference to spoof financial institutions in CIS countries, the network infrastructure used and the observed targeting, iDefense assesses with moderate confidence that the reported campaign is unlikely to be associated with CANDLEFISH. Furthermore, iDefense analysts have identified a number of interesting and noteworthy overlaps with FIN7: Research shows that the domains privat-bankau[.]com, halyk-bank[.]com, and tejarabank[.]com all have the organization name Goldfin LLC, a near-identical registrant address (see below), and a @rambler.ru e-mail address used as the registrant e-mail address.This pattern overlaps with two other domains - despanabrandfood[.]com and silverdiners[.]com (see Exhibit 18) - that iDefense current assesses with low confidence are likely associated with FIN7 due to the following:As mentioned in the infection chain analysis, the code embedded within the third-stage PowerShell script checkupdate.ps1 is obfuscated using a technique similar to that of PowerSploit. However, the technique used appears to be a niche variant as the embedded payload is further split into chunks and dynamically added to an array variable named $OArr. Interestingly, iDefense analysts have previously observed this obfuscation used in a PowerShell component (MD5: 87327b4045b9d004697aec7e7a4b9ba8) that was dropped by a HALFBAKED sample (MD5: 31fcf8a4ec7a4c693eda9336321cf401) back in August 2017. HALFBAKED is a malware family associated with FIN7.While the above overlapping features are not strong enough to be used to conclude that the Goldfin campaign is associated with FIN7, iDefense analysts believe they are significant and noteworthy and may well add to new evidence that may come to light in the future as research continues. They also highlight the complex hidden relationships that exist behind-the-scenes in organized cyber crime.