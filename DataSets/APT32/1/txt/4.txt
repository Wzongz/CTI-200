In May 2017, Volexity identified and started tracking a very sophisticated and extremely widespread mass digital surveillance and attack campaign targeting several Asian nations, the ASEAN organization, and hundreds of individuals and organizations tied to media, human rights and civil society causes. These attacks are being conducted through numerous strategically compromised websites and have occurred over several high-profile ASEAN summits. Volexity has tied this attack campaign to an advanced persistentthreat (APT) group firstidentified as OceanLotus by SkyEye Labs in 2015. OceanLotus, also known as APT32, is believed to be a Vietnam-based APT group that has become increasingly sophisticated in its attack tactics, techniques, and procedures (TTPs). Volexity works closely with several human rights and civil society organizations. A few of these organizations have specifically been targeted byOceanLotus since early 2015. As a result, Volexity has been able to directly observe and investigate various attack campaigns. This reportis based on a very targeted attack that Volexity observed and the research thatfollowed. Key highlights of this mostrecent and ongoing attack campaign by the OceanLotus group are as follows:Volexity believes the size and scale of this attack campaign have only previously been rivaled by a Russian APT group commonly referred to as Turla and documented in a reportfrom Symantec called The Waterbug attack group. The OceanLotus threat group has successfully operated, largely unnoticed, through several high-profile websites since late 2016. Volexity has observed the following operating pattern for the OceanLotus group: Volexity has also noted that some of the organizations with compromised websites have also been targeted with spear phishing campaigns that attemptto install backdoors on the target systems. Spear phishing activity and detailed malware infrastructure will be described in a follow on report on OceanLotus activity. Volexity has been able to identify a staggeringly large number of websites that have been strategically compromised by the OceanLotus attackers. The number of compromised websites exceeds 100. The overwhelming majority of the websites that have been compromised belong to Vietnamese individuals and organizations that are critical of the Vietnamese Government. The remainder of the compromised websites are tied to one of three countries that share a land border with Vietnam or the Philippines. Unlike with the Vietnamese victims, in most cases these websites are tied to state owned or affiliated organizations. Volexity has chosen notto listthe Vietnamese websites that have been compromised, as the quantity is exceedingly large (over 80) and many of them are tied to individuals or very small organizations. However, the list below characterizes the types of websites that have been victimized to facilitate this ongoing campaign. The compromised websites are being leveraged to deliver malicious JavaScript designed to profile and fingerprint a user on each visit. Volexity found that OceanLotus had developed two different JavaScriptframeworks to accomplish their profiling and targeting activities. For the purposes of this blog, we will call them Framework A and Framework B. With few exceptions, the compromised websites would only have code loading either Framework A or Framework B. Each of the hostnames and IPs were also tied to one of the two frameworks, with none of them serving up both. The following sections will provide some detail on the two frameworks and their multiple scripting components.Framework A is found on a limited number of victim sites. Initial URLs for access to Framework A are typically formatted similar to the following:The first script delivered contains several supportfunctions such as an MD5 function, a base64 decoder, and functions for loading additional data. The goal of this script appears to be defining everything needed to track a host across differentrequests. This script defines a section of variables used in other parts of the code. The host based ones are obtained from the User-Agentin the initial request. The h1 and h2 values in the request are MD5 hashes of some information aboutthe host making the request. The first hash, h1, is the MD5 hash of various pieces of information collected from the browser and concatenated together. The second hash, h2, is also an MD5 hash, butthe values concatenated are the screen height and width, timezone, plugins, MIME type, and language information. The encryptfunction simply iterates over the passed string and key string and adds the ASCII values at each position. Python scripts for encrypting and decrypting are as follows.The second scriptreturned starts by defining a browser_hash variable. This is composed of h1 and the first 10 characters of h2, separated by “–“. This scriptthen sends three GET requests, each with a d parameter in the query string that contains some encrypted and base64 encoded data.Framework B is found on the vast majority of sites. Initial URLs for access to Framework B are simply references to JavaScript(.js) files on OceanLotus controlled sites. Volexity has found thatthe URLs from Framework B do not actually matter, so long as the file extension ends in .js and a referrer is sent with the request. The JavaScript will be sent back regardless of the file or folder requested as long as it meets these two criteria.The main ASEAN website is one of the few places that contain both Framework A and Framework B. The following code has also been appended to legitimate JavaScriptloaded by the ASEAN website: This script will resultin the loading of JavaScriptfrom the following URL:The second framework collects similar information, but handles hosttracking differently. The initial scriptthatis delivered varies based on the host OS as determined from the UserAgentin the request. When the scriptis loaded, itfirst makes a GET requestto https://health-ray-id[.]com/robot.txt. This returns a UUID thatis sentin subsequent requests as either zuuid or client_zuuid.Itis also saved in localStorage for the compromised site under a key of x00Sync. The scriptthen makes two GET requests.The base64 data decodes to a JSON string containing information for tracking the host. For example, the data below, where zuuid is the UUID returned from health-ray-id.com. The uuid value (also seen as client_uuid in later requests) is also generated by the script and is stored in a cookie named ___APISID for the compromised domain. Itis generated using the fingerprintjs2 library, which creates a hash based on browser information. This is another method for tracking users across requests. This library and several other legitimate JavaScriptlibraries (including the jQuery core library and others for reading/storing cookies, collecting timezone data, etc.) are typically downloaded from a CDN URL and saved into localStorage variables to be later used by the script. They are stored as hex encoded data in a function called x00Config. If the clientis not on the OceanLotus whitelist, this requestjustreturns a single line of JavaScript setting a variable named timestamp. However, when the clientis on the whitelist, Volexity has observed a popup window that slowly fades in on top of the legitimate website. In a recent attack, the popup appeared Google related and would redirectto a Google OAuth page designed to fool the user into providing access to their accountto a malicious Google App. More details on this appear further down in this post.This request contains two pieces of information: a history section and a navigator section. The history section contains information aboutthe compromised site thatthe JavaScript was loaded from. It also contains certain information aboutthe hostincluding the UserAgent, time and timezone, and IP addresses. The navigator section is blank the firsttime the requestis made. When the scriptis firstrun, itrecords the currenttime in another localStorage variable. It only populates the navigator section if 24 hours have passed. It will also update the stored timestamp. This means the large section of data in the navigator section is only sent once per day, even if this compromised site is visited multiple times. This section includes a lot of the same information collected by Framework A, including MIME Types, plugins, and screen information. Below are a few portions of the data collected and sent back to the OceanLotus servers. As mentioned above, if a system is not on the whitelist, the GET /api//adFeedback.js request will justreturn a timestamp variable. For a whitelisted system, a new scriptis delivered. A portion of this script shown below makes a requestto download some additional config data.The domain for the requestis loaded from the SAPIS_ID cookie which was set by the first script. Before storing, itis splitin two, the two substrings are reversed, then itis base64 encoded. An example of the SAPIS_ID cookie can be seen in the navigator section above. This ultimately calls the e.fn_getjson() function that makes a requestlike the following: These are saved and accessed via a getConfigs() function for different actions the script can perform. Ultimately, the script presents a popup over the site saying the contentis blocked and requests thatthe visitor sign in to continue. The code below presents this page and tracks progress using the postShow() and postDown() functions, which send GET requests using the URLs shown above. When one of the buttons is clicked, the user is redirected to login to the application.Volexity was able to work with organizations on the OceanLotus whitelistthatreceived special responses from Framework B. As a result, Volexity was able to directly observe two different OceanLotus attacks that attempted to fool the targeted user into providing access to their Google Accounts. OceanLotus attempts to compromise Google Accounts by prompting the user with a popup directing them to provide OAuth authorizations to a malicious Google App. Once a user has been flagged for targeting, they will receive a popup when accessing an OceanLotus compromised website once every 24 hours. This popup slowly fades in over top of the legitimate website and appears quite legitimate. Screen shots of two different observed popups are shown below.Regardless of which option the user clicks, they are redirected to Google to initiate OAuth access to one of OceanLotus’ Google Apps. Below is a screen shot of what a user would see prior to authorizing the the nefarious Google App.If the targeted user chooses ALLOW, the OceanLotus Google App immediately logs into the account and starts accessing it. The account has permissions to access all e-mail and contacts, which is all the access OceanLotus needs to conduct digital surveillance. Volexity strongly recommends that anyone thatthinks they may have been targeted with this campaign or similar attacks review the Defense Against Ocean Lotus section below. OceanLotus is also known to be distributing malware in the form of fake Internet Explorer, Chrome, and Firefox updates. Volexity has observed similar attacks via spear phishing againsttargeted organizations thatleverage some of the same malware infrastructure. In these cases, the following Amazon S3 buckets were used to distribute the malware through JavaScript as part of OceanLotus Framework B or directlinks from spear phishing campaigns.Volexity has observed multiple custom malware families and Cobalt Strike delivered through these campaigns. Details on the observed malware samples are forthcoming.Volexity has worked with multiple victim organizations to assist with incidentresponse efforts and to remedy their compromised systems. This process lead to the identification of different ways the OceanLotus group gains access to the compromised websites and how they maintain access.Itis currently unknown how the intruders gain working credentials to the victim websites. Based on the TTPs leveraged byOceanLotus, itis possible that credentials could have been socially engineered (phished) from the victims or thatthe system administrators have been backdoored and a keylogger has assisted in capturing the login credentials. Alternatively, it is possible that some of the credentials were simply guessed. Several of the Vietnamese websites are running on Google’s Blogspot platform, so itis reasonable to believe thatthose users’ Google accounts may be compromised. In the case of exploitation, the CMS software used by the victim organizations was often woefully out of date. Both the core components and added plugins had remotely exploitable vulnerabilities thatlead to compromise.In all examined cases, OceanLotus attackers added PHP webshells to the victim websites. In most cases, the intruders added a new file that was designed to blend in with the web directory in which it was placed. In some cases, Volexity observed OceanLotus adding PHP code to an existing legitimate file already on the webserver.The hex code storage in $x translates to base64_decode. This code checks to see if variable1 is set and then validates whether the MD5 of the MD5 of the value setfor variable-2 matches an expected MD5 hash. If these both evaluate as true, the contents of variable-1 are base64 decoded and evaluated on the system. This is a simple webshell that, similar to a China Chopper shell, allows direct execution on the system under the privileges of the accountrunning the webserver. The OceanLotus intruders use these shells to interact with the system and update their JavaScript code on the various websites. OceanLotus also appears to have a potentially automated process that periodically checks if the webshells are still present on the victim systems.Volexity has identified a vast and sprawling amount of infrastructure leveraged by OceanLotus as a part of this strategic web compromise campaign. There are even more indicators associated with various malware campaigns that Volexity will detail in another OceanLotus postto follow. OceanLotus’s attack infrastructure has several unique characteristics, which makes it easy to identify if a particular system is under their control. As a result, Volexity was able to identify numerous systems that were not directly observed in active attacks but are strongly believed to be tied to OceanLotus. In the sections below, the infrastructure has been separated into active and inactive/unknown categories. If the infrastructure is listed as active, this means that Volexity has directly observed the hostname’s use in an attack. If the infrastructure is listed as inactive/unknown, this means that Volexity found evidence the hostname was used in a past attack butis no longer in use or it has never been observed in a direct attack but has unique characteristics indicative of OceanLotus infrastructure. While the described attack campaign relies on fooling a user, the popups on the websites are quite convincing and legitimate looking. As a result, Volexity would recommend immediately putting in blocks or sinkholes for the domains and IP addresses listed above to prevent profiling and possible exploitation. The observed attacks thus far have relied on social engineering campaigns; however, it would be trivial for OceanLotus to introduce an exploitinto this chain. As for malware indicators, Volexity will be providing additional data related to malware and backdoor infrastructure in a future write-up to follow soon. When it comes to Google accounts, Volexity would recommend that users enable the 2-Step Authentication. This is an effective way to prevent access to a Google account should the password be compromised. However, in the case of this OceanLotus campaign, the attackers are leveraging a Google App that has OAuth authorized access to the victim’s email and contacts. This effectively bypasses 2-Step authentication as a result. Users should be very careful to only authorize legitimate and known Google Apps. Users can verify what Google Apps have access to their account by visiting the following URL: This will listthe Google Apps with access to the account along with their permission levels. It is possible to defend against unauthorized applications and increase a Google Accounts security through the Google Advanced Protection Program as well Users can further verify what Google Apps and devices are accessing their account via the following steps:If any access stands out as coming from an unauthorized application or address, the guidance in the steps on the following page should be reviewed:In addition to the domains and IP addresses, the following network signatures can be used to detect various OceanLotus profiling and targeting activity.Volexity believes the OceanLotus threat group has rapidly advanced its capabilities and is now one of the more sophisticated APT actors currently in operation. While Volexity does nottypically engage in attempting attribution of any threat actor, Volexity does agree with previously reported assessments that OceanLotus is likely operating out of Vietnam. This is largely due to the extreme and wide-scale nature of certain targeting that would be extremely unlikely to align with the interests of those outside of Vietnam. As a result, Volexity believes that OceanLotus has been rapidly developing a highly skilled and organized computer network exploitation (CNE) capability.