ZooPark is a cyberespionage operation that has been focusing on Middle Eastern targets since at least June 2015. The threat actors behind ZooPark infect Android devices using several generations of malware we label from v1-v4, with v4 being the most recent version deployed in 2017. The preferred infection vector for ZooPark is waterhole attacks. We found several news websites that have been hacked by the attackers to redirect visitors to a downloading site that serves malicious APKs. Some of the themes observed in campaign include “Kurdistan referendum”, “TelegramGroups” and “Alnaharegypt news”, among others. Target profile has evolved during the last years of campaign, focusing on victims in Egypt, Jordan, Morocco, Lebanon and Iran. The malware used in ZooPark operations spans across multiple versions, with the attackers including new features in each iteration. The following chart summarizes the main features added in new generations: In this section we will detail the main technical features of the malware used in this campaign. This reads the content of the file “zoo.zoo” (located on the memory card, in the picture/photo path), encodes it with Base64 and sends it to the server, removing the original file. This file is a photo silently captured by the frontal camera, and we believe it was probably created by some unknown malware component. One of the samples (6A388EDBCE88BB0331AE875CEEB2F319) mimics the All-in-One messenger application. After launch, it only presents a credential form if the date on the device is prior to 2017.01.01 (hardcoded). Otherwise, it just executes System.exit(). The file looks like a typical JPG but appends an IP address that will be used for the C2. There are some details that seem to demonstrate that ZooPark developers did not fully understand the Spymaster Pro code they were reusing. In the case of the SmsReceiver function, we can see how in both implementations they use the “PASSWORD” variable: The difference is that Spymaster Pro uses this variable for SMS message encryption, while ZooPark uses an own hardcoded AES key, so the “PASSWORD” variable left in the code has no purpose. Even if the Baseurl is the address of the C2 server, this is a legacy variable from version 2. Actually, the main C2 server address is determined like in version 3, by sending a request to an intermediate server. All the samples found contain two encrypted intermediate server addresses:This receiver starts the main malicious service called GooglePlayService, which controls other components. After launch, it creates all the working directories, inits the database and checks if the current device is rooted by searching for the following su binaries and Superuser.apk:They are triggered after the device connection changes or the screen turns on/off. In the first case it starts uploading the stolen data to the C2; in the second it processes preloaded C2 server commands. This version has a huge internal configuration containing dozens of parameters that regulate the malicious activities. This configuration can be updated from the C2 server. Part of the stolen information is stored in an internal SQL database, called testunitdb. Actually, this version is able to steal additional information compared to version 3:The keylogger implementation based on the AccessibilityService is something we have already seen in other spyware families. Basically, it listens for specific events such as changing the text of any EditText element on the screen (type = 16), opening a PopupWindow, Menu, Dialog, etc. (for instance, windows that may contain EditText fields (type = 32)). When the second event is found, the malware initializes the keylogger instance, logging typed text and the related contextual application name. After the malware obtains the main C2 address, it connects to the C2 server on port 6666. All the transmitted data is encrypted with RSA, with its Java public key file located in \assets\puki. It also generates an AES key and sends it to the C2 server for additional responses. Interestingly, the developers used the “secure random” fix for key generation:This shows the developers’ concerns about cryptography. Since this attack is very targeted, we can assume the developers paid special attention to work on outdated devices that are vulnerable to this “insecure random” attack. Here is the scheme of client-server communications: As mentioned in this code snippet, the malware operates with “Pac” serializable objects that are used as tasks from the server to execute (when the “type” value is even) and as report containers for C2 submission (when the “type” value is odd). The “Pac” report with the completed task has a “type” value +1 compared to the related task. All reports are saved in the “TO_GO” directory. Here is the full list of possible tasks from the C2 server:The gate that handled requests from infected devices named “/spyMobile/” is exactly the same gate used by the commercial spyware product. Even some commented HTML seems to come originally from Spymaster Pro: Several samples (version 1.0 in this specific case) mimicked a voting application for the Iranian Kurdistan province: This channel was created on November 11, 2015 with the latest activity dated April 5, 2016. It shows election information among version 1.0 malware samples: We collected evidence that attackers deployed at least two watering holes to distribute their malware; in these cases version 3 of the malware was used. alnaharegypt[.]com Al-Nahar is one of the most popular Egyptian news sites, rated 19th in Egypt by popularity according to Alexa. Below is a page from the site with news about the dollar exchange rate on the black market (hxxp://www.alnaharegypt.com/t~467369): It would start downloading the malicious APK in Android without any notification, though a modern browser such as Chrome will notify the user before starting the download. The malicious APK name (alnaharegypt.news_v2.0.apk) mimics the waterholed site. We took a closer look at the site hosting the malicious APK file - showroommontorgueil[.]com. It was the site of a French fashion brand: Despite the fact the site is currently unavailable, based on the watering hole URL we can tell that it was a PrestaShop web application. And if we look for serious security vulnerabilities there is an important one related to file uploading. It allows a remote attacker to upload an arbitrary file by abusing PrestaShop modules, and as a result take control of the victim’s server. Moreover, there is a list of URLs on Pastebin that look like vulnerable or already pawned PrestaShop sites, and it contains showroommontorgueil.com:It looks like the main interest of this hacking group is defacing vulnerable websites and they are probably unrelated to the campaign actors. All this suggests that showroommontorgueil.com was hacked and probably by multiple attackers.An-Nahar is a leading Arabic daily newspaper published in Lebanon. We found some traces suggesting that maybe there was a watering hole on their site, though we can´t confirm this. In particular, one of the samples (ac4402e04de0949d7beed975db84e594) mimics the An Nahar official mobile application, which makes us believe the malware was probably distributed in a similar way through the legitimate site.Some of the analyzed samples provide clues about the intended targets for this campaign. For instance, the sample CB67ABD070AE188390FC040CBE60E677 mimics a voting application for the independence referendum in Kurdistan:Clicking it will show an image used by Kurdish referendum supporters and offer different voting options: From the technical point of view, the evolution of ZooPark has shown notable progress: from the very basic first and second versions, the commercial spyware fork in its third version and then to the complex spyware that is version 4. This last step is especially interesting, showing a big leap from straightforward code functionality to highly sophisticated malware. This suggests the latest version may have been bought from vendors of specialist surveillance tools. That wouldn’t be surprising, as the market for these espionage tools is growing, becoming popular among governments, with several known cases in the Middle East. Also, choosing mobile platforms for espionage campaigns is just a natural evolutionary step. At this point, we cannot confirm attribution to any known actor. If you would like to learn more about our intelligence reports or request more information on a specific report, contact us at: intelreports@kaspersky.com.