{
    "event_id": "032",
    "claim": "Unit 42 researchers have investigated a series of destructive cyberattacks beginning in January 2023 and continuing as recently as October 2023, targeting the education and technology sectors in Israel.",
    "original_label": "true",
    "label": "true",
    "explain": "Unit 42 researchers have investigated a series of destructive cyberattacks beginning in January 2023 and continuing as recently as October 2023, targeting the education and technology sectors in Israel. The attacks are characterized by attempts to steal sensitive data, such as personally identifiable information (PII) and intellectual property. Once the attackers stole the information, they deployed various wipers intended to cover the attackers’ tracks and to render the infected endpoints unusable.Our investigation revealed the perpetrators of the attacks have strong connections to an Iranian-backed APT group Unit 42 tracks as Agonizing Serpens (aka Agrius, BlackShadow, Pink Sandstorm, DEV-0022). Unit 42 researchers were also able to identify novel new wipers and tools that Agonizing Serpens used in their most recent attacks:Based on forensic evidence, it appears that the Agonizing Serpens APT group has recently upgraded their capabilities and they are investing great efforts and resources to attempt to bypass endpoint detection and response (EDR) and other security measures. To do so, they have been rotating between using different known proof of concept (PoC) and pentesting tools as well as custom tools. For the attacks described below, the attacker was unsuccessful at bypassing Cortex XDR. Cortex XDR and XSIAM detect and prevent the execution flow described. They also build behavioral profiles of user activity over time with machine learning, allowing them to detect anomalous activity indicative of, for example, credential-based attacks. We are sharing this research to provide detection, prevention and hunting recommendations to help organizations protect against the threats associated with Agonizing Serpens.Agonizing Serpens (aka Agrius) is an Iranian-linked APT group that has been active since 2020. The group is known for its destructive wiper and fake-ransomware attacks and mainly targets Israeli organizations across multiple industries and countries. Though earlier reports of these attacks mentioned ransomware and ransom notes, these turned out to be a ruse (a trend noted in the 2023 Unit 42 Ransomware and Extortion Report). In the most recent attacks, the attackers did not request ransom – rather, the potential result of the attacks was vast data loss and disruptions of business continuity. Attacks from Agonizing Serpens usually have two main goals, the first being stealing sensitive information that includes PII and intellectual property, which threat actors then publish on social media or Telegram channels. It seems likely that their motivation to publish on social media is to sow fear or inflict reputational damage. The second goal is wreaking havoc and inflicting considerable damage by wiping as many endpoints as possible. Since its emergence, the group has developed new custom tools and they have also leveraged known hacking tools and techniques to carry out their aggressive operations.The following sections detail the different stages of a recent incident carried out by Agonizing Serpens in October 2023, as analyzed by Unit 42 researchers.The attackers gained initial access to the environment by exploiting vulnerable internet facing web servers. Subsequently, they deployed multiple web shells, which granted them a foothold in the network. The web shells that threat actors used in the described attack (shown in Figure 1) contain the same code as web shells that were observed in previous Agonizing Serpens attacks, with variations to the naming of functions. The web shells appear to be variations of ASPXSpy.Another web shell used in this attack was named Uploader.aspx. Figure 2 shows almost identical code found in two web shells used by Agonizing Serpens, one from a recent attack and the other from a past attack.Figure 3 shows how, shortly after the attackers deployed the web shells, they started to execute basic reconnaissance commands via the web shells.To map out the network, the attackers used various known and publicly available scanners.The attackers used Nbtscan, renamed as systems.txt, to scan the network for existing hosts (shown in Figure 4).Figure 5 shows how the attackers used an open-source SYN/TCP port scanner by WinEggDrop to scan particular hosts of interest.NimScan is another publicly available port scanner that the attackers used in the attack, as shown in Figure 6.A crucial phase of the attack consisted of obtaining credentials of users with administrative privileges. To do so, the attackers tried multiple methods to obtain credentials, which were prevented by the Cortex XDR platform:Figure 9 shows that to move laterally in the environment, the attackers mostly used Plink (renamed as systems.exe) to create remote tunneling and establish connections to remote machines.Attackers attempted to steal information from databases and other critical servers before executing wipers to cover their tracks. They then tried to exfiltrate this information to the attackers’ C2 servers, using different publicly available tools such as WinSCP and Putty.The data was saved into CSV files as shown in Figures 10 and 11. The tool writes the data to a hard-coded staging path: C:\\windows\\temp\\s\\. Figure 10 shows the attackers then used 7za.exe to archive the extracted data in preparation for exfiltration.Figure 12 shows the attackers also used 7zG.exe to archive interesting folders in the infected environment.The attackers attempted to use WinSCP to exfiltrate files from the environment, as shown in Figures 13 and 14.Figure 15 shows that another tool the attackers used for exfiltration is pscp.exe (PuTTY Secure Copy Protocol). The attackers attempted to establish a connection to the C2, then searched for .7z and .ezip files that contain stolen data, as well as .dmp files created by ProcDump.During the incident, the attackers attempted to use three separate wipers as part of the destructive attack. While some of the wipers show code similarities to previously reported wipers the Agonizing Serpens group used, others are considered brand new. These have been used for the first time in this attack, as detailed in the following section.The first wiper that the attackers used is .NET malware called MultiLayer. As its name suggests, this wiper contains multiple layers and stages. Its compilation date is Oct. 14, 2093. As this is set to a future date, it is a clear sign of metadata manipulation. Figure 16 shows that it contains two more binaries in its resources section, named MultiList and MultiWip. MultiLayer drops and executes each of the aforementioned binaries, then deletes them right after their execution.MultiList generates a list of all the files and their paths on the fixed drives on the system. It does this by enumerating all files on the infected operating system while excluding specific folders defined in a predefined list (shown in Figure 17). The attackers can define the path to which this tool should store the list via the command line.The MultiWip component contains the actual file wiping functionality. It relies on the previous component (MultiList) and reads the output list of files to wipe, which is passed as a command-line argument. MultiWip’s main function is called DoJob() and is responsible for carrying out the file-wiping activity in the manner shown in Figure 18.The malware takes the following steps in the order indicated:LastAccessTime, LastWriteTime and CreationTime. This is a well-known anti-forensic timestomping technique. The malware timestomps according to the file system. If the file system is NTFS, the malware sets the timestamp to 1601.1.1. Any other file system, the malware sets it to 1980.1.1 (shown in Figure 20).MultiLayer is designed to cover its tracks by erasing evidence of its execution. It does so by running various commands to prevent restoration of lost data and to render the disk unusable. Figure 21 shows that MultiLayer uses the DeleteLogs() function to create a scheduled task that launches a batch script only once. The script then removes all the Windows Event Logs.To remain stealthy, MultiLayer removes all the files it uses after its execution, including itself. To remove itself, MultiLayer uses SelfDelete(). The removal is implemented by threat actors writing a batch file named remover.bat to %TEMP% and executing it. The batch file deletes the assembly file and the batch itself, and then it clears the file system cache memory, leveraging the ProcessIdleTasks export in advapi32.dll. To further prevent data restoration, MultiLayer tries to remove all shadow copies on the system as shown in Figure 22, and then remove the Volume Shadow Copy (VSS) service itself. Finally, after the boot sector is corrupted, MultiLayer adjusts its privileges to SeShutdownPrivilege and calls the Windows API ExitWindowsEx with the EWX_REBOOT flag, which indicates system reboot. Once the system reboots, it will not be able to boot again. The attempt to execute MultiLayer was prevented by Cortex XDR, as depicted in Figure 24 below.Throughout our analysis of MultiLayer, we noticed multiple code overlaps with Apostle, IPsec Helper and Fantasy. These are custom tools previously used by Agonizing Serpens. This might be the result of a shared codebase or being written by the same team of developers. When comparing the code of the aforementioned tools, it appears that MultiLayer shares naming conventions and even entire code blocks with them. Example 1: Self-Deletion Mechanism The self-deletion mechanism of MultiLayer is implemented in a similar manner to IPsec Helper, Apostle and Fantasy. They share the same name for the function, named SelfDelete(). They also delete themselves by writing a batch file named remover.bat to %TEMP% and executing it, using the above mentioned functions shown in Figures 25 and 26.The recursive directory listing mechanism of MultiList is implemented in a similar manner to Fantasy and Apostle. They share the same name for the function, named GetSubDirectoryFileListRecusrive. They also both call GetSubDirectoryFileListRecusrive() and GetDirectoryFileList(), where GetSubDirectoryFileListRecusrive() is called recursively as shown in the code snippets in Figures 27 and 28.During the attack, the attackers attempted to use a second wiper, which they call PartialWasher or PW. Figure 29 shows that it was compiled on Oct. 8 and, unlike other .NET wipers mentioned in this article, it is written in C++.PartialWasher defines itself as a crucial process by calling NtSetInformationProcess, and it supports command-line arguments. In case no arguments are provided, the default functionality would be a wiper functionality. When passing 1 as an argument, the attacker can then use an interactive command-line interface (CLI). There are several typos in the interface’s text, indicating that the authors are likely not native English speakers. Figure 30 shows an example of the passed arguments S /p. They trigger the malware to gather information about available drives on the infected machine.The supported commands demonstrate the wiper’s further capabilities to perform individual wiping tasks at the request of its operators. These commands include:A third wiper that the attackers used is called BFG Agonizer (bfg.exe), according to its PDB path (E:\\tools2\\BFG agonizer\\INFECTOR\\Dropper\\Dropper\\Release\\Dropper.pdb). The file metadata indicates that it was compiled on Oct. 8, as shown in Figure 32.It is worth noting that there are many code similarities between BFG Agonizer and an open-source project called CRYLINE-v5.0, hosted on GitHub. We assess that BFG’s authors copied, or at the very least, relied heavily on this publicly available code. Before the wiper commences its wiping activity, it first attempts to circumvent security measures that might exist on the infected endpoint. It does so by implementing several anti-hooking techniques, which have not been reported thus far as part of the group's known techniques. This suggests a possible upgrade of their capabilities. The following sections list the anti-hooking functions BFG runs before its main payload.DLL unhooking is an anti-hooking technique that attempts to remove the user mode inline hooks, which various security solutions often implement. The technique works by restoring the bytes of the hooked functions to their original disk values. This technique is well known, and it is likely that the wipers’ authors largely adopted the following publicly available code.IAT unhooking is an anti-hooking technique that attempts to remove the user-mode IAT hooks, which various security solutions often implement. Based on the wiper’s code, it is likely that the authors largely adopted publicly available IAT unhooking code snippets.To wipe the boot sector, the wiper retrieves a device handle to \\.\\PhysicalDrive0 as shown in Figure 33. In turn, it calls DeviceIoControl with the IOCTL_DISK_GET_PARTITION_INFO control code to find the partition style.If the partition style is master boot record (MBR) or GUID partition table (GPT) it infects the first 6 sectors as shown in Figure 34.Finally, after the sectors are infected, the wiper adjusts its privileges to have the SeShutdownPrivilege and calls the native API NtRaiseHardError, which triggers a blue screen of death (BSOD) in the system with the error code of 0xC0000420. Once the system crashes, it will not be able to boot again (shown in Figure 35).The attempt to execute BFG Agonizer wiper was prevented by Cortex XDR, as depicted in Figure 36 below.During the attack, the group specifically attempted to bypass EDR solutions to carry out their attack uninterrupted and with greater stealth. These attempts were blocked by the Cortex XDR platform. It is interesting to note that the group tried multiple tools and techniques, and each time they failed with one, they tried to leverage another. While most of the techniques are known and well-documented, the group has not used them in previous publicly reported attacks. This could suggest that the group is becoming increasingly advanced and aggressive in its approach. The following sections list some of the EDR bypass tools and techniques in the order they leveraged them.The threat actor attempted their first EDR bypass technique on Oct. 6. The actor tried to manipulate the Cortex XDR service auto-start functionally. By leveraging previously obtained Administrator privileges, the attackers tried to modify the services Cortex XDR depends on, so it would not be able to auto-start upon system startup. Figure 37 shows these attempts were prevented, and then the attackers shifted into using custom tools that abuse the “bring your own vulnerable driver” (BYOVD) technique.The first custom tool the attackers used was a binary named agmt.exe, which was compiled on Oct. 7. According to its PDB path (C:\\Users\\dude\\source\\repos\\drvix\\x64\\Release\\drvix.pdb), it appears that this tool’s original name is drvIX (shown in Figure 38).However, according to the binary help function shown in Figure 39, the name is Drvtopia.Agmt.exe is a custom loader and operator for the GMER driver, gmer64.sys (renamed to AGMT.sys). GMER’s original intended purpose is to detect and remove rootkits; however, threat actors can also leverage it to remove security products. Using agmt.exe, the attackers can specify the PID of the target process they wish to terminate via the command line. Agmt.exe starts by registering GMER a new kernel driver (agmt.sys) as a service named AGMT and starting it, which in turn causes the operating system to load the driver into the kernel. To communicate and abuse the GMER functionality of terminating processes, agmt.exe retrieves a device handle to GMER’s device object as shown in Figure 40.Then, agmt.exe uses DeviceIoControl Windows API with the control code 0x9876C094, while specifying the PID in the Input_Buffer parameter of the call (shown in Figure 41).DeviceIoControl allows user mode processes to directly communicate with kernel drivers, allowing the processes to request the drivers to service certain operations for them. In the case of agmt.exe, the DeviceIoControl API call triggers a process termination operation for the GMER driver. Figure 44 shows that by inspecting the GMER driver, we can determine that the functionality of the 0x9876C094 control code is to terminate the target process provided by PID.The function opens a handle to the target process PID using ZwOpenProcess and then terminates it by calling ZwTerminateProcess. The attempt to leverage the GMER driver failed, as shown in Figure 43 below.As the attempt to exploit the GMER driver failed, the attackers tried arming their drvIX tool. They did so using a different vulnerable driver from a new publicly available PoC tool called BadRentdrv2, first published in the beginning of October 2023. The attacker used the same project and compiled a modified version of the tool a day later, on Oct. 8 as shown in Figure 44. This time, the binary’s original name drvIX.exe was not changed.The loading code of the driver looks almost identical to the aforementioned drvIX version. Similarly, drvIX.exe accepts the PID of the target process the attacker wishes to terminate via the command line. DrvIX retrieves a device handle to its device object and communicates with the Rentdrv2 driver via DeviceIoControl. DrvIX then sends the target PID by specifying it in a structure sent as the Input_Buffer and specifies the control code as 0x22E010 (shown in Figure 45).Similarly to the GMER driver, the 0x220E010 control code terminates the target process provided by its PID, as shown in Figure 46.The function opens a handle to the target process PID using ZwOpenProcess and terminates it by calling ZwTerminateProcess. Figure 47 shows this attempt was blocked and prevented by the Cortex XDR platform.In this article we provided a deep dive analysis of a recent destructive wiper attack carried out by the Iranian-linked Agonizing Serpens APT group. This attack is a part of a broader offensive campaign that targets Israeli organizations. Based on our telemetry, the most targeted organizations belong to the education and technology sectors. Our investigation uncovered new tools in the group’s arsenal that include a set of three previously undocumented wipers, as well as a database extractor tool. Analysis of the new wipers revealed that the group has upgraded their capabilities, putting an emphasis on stealth and evasive techniques designed to bypass security solutions such as EDR technology. As shown throughout our research, the Cortex XDR platform can detect and prevent the various stages of the attack lifecycle.\n\n\n",
    "reports": [
        {
            "link": "https://therecord.media/iran-hackers-agrius-deploying-new-ransomware",
            "content": "A recent report from Microsoft Threat Intelligence found that the Iranian government is increasingly focused on combining influence operations with cyberattacks. ClearSky researchers linked the attacks “with a low confidence” to the Iranian nation-state hacker group Tortoiseshell, also called TA456 and Imperial Kitten. Iran-linked hackers Agrius deploying new ransomware against Israeli orgs An Iran-linked advanced persistent threat group is using new ransomware while targeting a familiar adversary in the Middle East, researchers have found. The group is known for having targeted the Israeli insurance company Shirbit with ransomware in late 2020 and Bar-Ilan University in 2021, and for deploying wiper attacks. They linked 24 “cyber-enabled operations” to the Iranian government last year, compared to seven the year before, and found a corresponding decline in the sorts of ransomware and wiper attacks typically deployed by Agrius. This week, however, cyber intelligence firm ClearSky reported that a suspected Iranian APT group had targeted eight Israeli websites connected to shipping and logistics in watering hole attacks — where specific users are targeted by infecting the sites they commonly visit.",
            "domain": "therecord.media",
            "tokenized": [
                {
                    "sent": "A recent report from Microsoft Threat Intelligence found that the Iranian government is increasingly focused on combining influence operations with cyberattacks.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "ClearSky researchers linked the attacks “with a low confidence” to the Iranian nation-state hacker group Tortoiseshell, also called TA456 and Imperial Kitten.",
                    "is_evidence": 0
                },
                {
                    "sent": "Iran-linked hackers Agrius deploying new ransomware against Israeli orgs An Iran-linked advanced persistent threat group is using new ransomware while targeting a familiar adversary in the Middle East, researchers have found.",
                    "is_evidence": 0
                },
                {
                    "sent": "The group is known for having targeted the Israeli insurance company Shirbit with ransomware in late 2020 and Bar-Ilan University in 2021, and for deploying wiper attacks.",
                    "is_evidence": 0
                },
                {
                    "sent": "They linked 24 “cyber-enabled operations” to the Iranian government last year, compared to seven the year before, and found a corresponding decline in the sorts of ransomware and wiper attacks typically deployed by Agrius.",
                    "is_evidence": 0
                },
                {
                    "sent": "This week, however, cyber intelligence firm ClearSky reported that a suspected Iranian APT group had targeted eight Israeli websites connected to shipping and logistics in watering hole attacks — where specific users are targeted by infecting the sites they commonly visit.",
                    "is_evidence": 0
                }
            ]
        },
        {
            "link": "https://research.checkpoint.com/2023/agrius-deploys-moneybird-in-targeted-attacks-against-israeli-organizations/",
            "content": "Agrius ransomware operations have been mostly tied to a custom ransomware called Apostle, which was originally a wiper. Check Point Threat Emulation provides comprehensive coverage of attack tactics, file types, and operating systems, and has developed and deployed a signature named “Ransomware.Wins. Following the deployment of webshells, the threat actor was observed utilizing several publicly available tools to perform recon, move laterally, harvest credentials, and exfiltrate data. The actor has been tied to several ransomware and wiper attacks, with a major focus on Israeli institutions. The use of a new ransomware demonstrates the actor’s additional efforts to enhance capabilities, as well as hardening attribution and detection efforts. The use of a new ransomware, written in C++, is noteworthy, as it demonstrates the group’s expanding capabilities and ongoing effort in developing new tools.",
            "domain": "research.checkpoint.com",
            "tokenized": [
                {
                    "sent": "Agrius ransomware operations have been mostly tied to a custom ransomware called Apostle, which was originally a wiper.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Check Point Threat Emulation provides comprehensive coverage of attack tactics, file types, and operating systems, and has developed and deployed a signature named “Ransomware.Wins.",
                    "is_evidence": 0
                },
                {
                    "sent": "Following the deployment of webshells, the threat actor was observed utilizing several publicly available tools to perform recon, move laterally, harvest credentials, and exfiltrate data.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "The actor has been tied to several ransomware and wiper attacks, with a major focus on Israeli institutions.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "The use of a new ransomware demonstrates the actor’s additional efforts to enhance capabilities, as well as hardening attribution and detection efforts.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "The use of a new ransomware, written in C++, is noteworthy, as it demonstrates the group’s expanding capabilities and ongoing effort in developing new tools.",
                    "is_evidence": 0,
                    "is_repeat": 0
                }
            ]
        },
        {
            "link": "https://www.sentinelone.com/labs/from-wiper-to-ransomware-the-evolution-of-agrius/",
            "content": "An analysis of what at first sight appeared to be a ransomware attack revealed new variants of wipers that were deployed in a set of destructive attacks against Israeli targets. Based on technical analysis of the tools and attack infrastructure, we assess with medium confidence that the attacks were carried out by a threat group affiliated with Iran. During this phase, the attackers use a variety of publicly available offensive security tools for credential harvesting and lateral movement. One of the wipers used in the attack, dubbed ‘Apostle’, was later turned into a fully functional ransomware, replacing its wiper functionalities. The group leverages its own custom toolset, as well as publicly available offensive security tools, to target a variety of organizations in the Middle East. The similarity to its wiper version, as well as the nature of the target in the context of regional disputes, leads us to believe that the operators behind it are utilizing ransomware for its disruptive capabilities.",
            "domain": "www.sentinelone.com",
            "tokenized": [
                {
                    "sent": "An analysis of what at first sight appeared to be a ransomware attack revealed new variants of wipers that were deployed in a set of destructive attacks against Israeli targets.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "Based on technical analysis of the tools and attack infrastructure, we assess with medium confidence that the attacks were carried out by a threat group affiliated with Iran.",
                    "is_evidence": 0
                },
                {
                    "sent": "During this phase, the attackers use a variety of publicly available offensive security tools for credential harvesting and lateral movement.",
                    "is_evidence": 0
                },
                {
                    "sent": "One of the wipers used in the attack, dubbed ‘Apostle’, was later turned into a fully functional ransomware, replacing its wiper functionalities.",
                    "is_evidence": 0
                },
                {
                    "sent": "The group leverages its own custom toolset, as well as publicly available offensive security tools, to target a variety of organizations in the Middle East.",
                    "is_evidence": 0
                },
                {
                    "sent": "The similarity to its wiper version, as well as the nature of the target in the context of regional disputes, leads us to believe that the operators behind it are utilizing ransomware for its disruptive capabilities.",
                    "is_evidence": 0
                }
            ]
        },
        {
            "link": "https://www.welivesecurity.com/2022/12/07/fantasy-new-agrius-wiper-supply-chain-attack/",
            "content": "ESET researchers analyzed a supply-chain attack abusing an Israeli software developer to deploy Fantasy, Agrius’s new wiper, with victims including the diamond industry. ESET researchers discovered a new wiper and its execution tool, both attributed to the Agrius APT group, while analyzing a supply-chain attack abusing an Israeli software developer. The first tools deployed by Agrius operators to victim systems, through means unknown, were:Usernames, passwords, and hostnames collected by these tools are required for Sandals to successfully spread and execute the Fantasy wiper. The group initially deployed a wiper, Apostle, disguised as ransomware, but later modified Apostle into fully fledged ransomware. To that end, Agrius operators probably executed a supply-chain attack by targeting an Israeli software company’s software updating mechanisms to deploy Fantasy, its newest wiper, to victims in Israel, Hong Kong, and South Africa. We believe that Agrius operators conducted a supply-chain attack abusing the Israeli software developer to deploy their new wiper, Fantasy, and a new lateral movement and Fantasy execution tool, Sandals.",
            "domain": "www.welivesecurity.com",
            "tokenized": [
                {
                    "sent": "ESET researchers analyzed a supply-chain attack abusing an Israeli software developer to deploy Fantasy, Agrius’s new wiper, with victims including the diamond industry.",
                    "is_evidence": 0,
                    "is_repeat": 0
                },
                {
                    "sent": "ESET researchers discovered a new wiper and its execution tool, both attributed to the Agrius APT group, while analyzing a supply-chain attack abusing an Israeli software developer.",
                    "is_evidence": 0
                },
                {
                    "sent": "The first tools deployed by Agrius operators to victim systems, through means unknown, were:Usernames, passwords, and hostnames collected by these tools are required for Sandals to successfully spread and execute the Fantasy wiper.",
                    "is_evidence": 0
                },
                {
                    "sent": "The group initially deployed a wiper, Apostle, disguised as ransomware, but later modified Apostle into fully fledged ransomware.",
                    "is_evidence": 0
                },
                {
                    "sent": "To that end, Agrius operators probably executed a supply-chain attack by targeting an Israeli software company’s software updating mechanisms to deploy Fantasy, its newest wiper, to victims in Israel, Hong Kong, and South Africa.",
                    "is_evidence": 0
                },
                {
                    "sent": "We believe that Agrius operators conducted a supply-chain attack abusing the Israeli software developer to deploy their new wiper, Fantasy, and a new lateral movement and Fantasy execution tool, Sandals.",
                    "is_evidence": 0
                }
            ]
        }
    ]
}